### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Interfaces.IPlayer
  commentId: T:PluginAPI.Core.Interfaces.IPlayer
  id: IPlayer
  parent: PluginAPI.Core.Interfaces
  children:
  - PluginAPI.Core.Interfaces.IPlayer.GameObject
  - PluginAPI.Core.Interfaces.IPlayer.GetComponent``1(System.Boolean)
  - PluginAPI.Core.Interfaces.IPlayer.IsServer
  - PluginAPI.Core.Interfaces.IPlayer.OnDestroy
  - PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate
  - PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate
  - PluginAPI.Core.Interfaces.IPlayer.OnStart
  - PluginAPI.Core.Interfaces.IPlayer.OnUpdate
  - PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
  - PluginAPI.Core.Interfaces.IPlayer.TemporaryData
  - PluginAPI.Core.Interfaces.IPlayer.TryGetComponent``1(``0@,System.Boolean)
  langs:
  - csharp
  - vb
  name: IPlayer
  nameWithType: IPlayer
  fullName: PluginAPI.Core.Interfaces.IPlayer
  type: Interface
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IPlayer
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 7
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nDefines a player.\n"
  example: []
  syntax:
    content: 'public interface IPlayer : IEntity'
    content.vb: >-
      Public Interface IPlayer
          Inherits IEntity
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: PluginAPI.Core.Interfaces.IPlayer.IsServer
  commentId: P:PluginAPI.Core.Interfaces.IPlayer.IsServer
  id: IsServer
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: IPlayer.IsServer
  fullName: PluginAPI.Core.Interfaces.IPlayer.IsServer
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IsServer
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 12
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets if player is dedicated server.\n"
  example: []
  syntax:
    content: bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsServer As Boolean
  overload: PluginAPI.Core.Interfaces.IPlayer.IsServer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
  commentId: P:PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
  id: ReferenceHub
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: ReferenceHub
  nameWithType: IPlayer.ReferenceHub
  fullName: PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: ReferenceHub
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 17
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets the player&apos;s <xref href=\"ReferenceHub\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: ReferenceHub ReferenceHub { get; }
    parameters: []
    return:
      type: ReferenceHub
    content.vb: ReadOnly Property ReferenceHub As ReferenceHub
  overload: PluginAPI.Core.Interfaces.IPlayer.ReferenceHub*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PluginAPI.Core.Interfaces.IPlayer.GameObject
  commentId: P:PluginAPI.Core.Interfaces.IPlayer.GameObject
  id: GameObject
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: GameObject
  nameWithType: IPlayer.GameObject
  fullName: PluginAPI.Core.Interfaces.IPlayer.GameObject
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: GameObject
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 22
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets the player&apos;s <xref href=\"UnityEngine.GameObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: GameObject GameObject { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property GameObject As GameObject
  overload: PluginAPI.Core.Interfaces.IPlayer.GameObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PluginAPI.Core.Interfaces.IPlayer.TemporaryData
  commentId: P:PluginAPI.Core.Interfaces.IPlayer.TemporaryData
  id: TemporaryData
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: TemporaryData
  nameWithType: IPlayer.TemporaryData
  fullName: PluginAPI.Core.Interfaces.IPlayer.TemporaryData
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TemporaryData
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 27
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets player temporary data storage.\n"
  example: []
  syntax:
    content: DataStorage TemporaryData { get; }
    parameters: []
    return:
      type: PluginAPI.Core.DataStorage
    content.vb: ReadOnly Property TemporaryData As DataStorage
  overload: PluginAPI.Core.Interfaces.IPlayer.TemporaryData*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: PluginAPI.Core.Interfaces.IPlayer.OnStart
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.OnStart
  id: OnStart
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: OnStart()
  nameWithType: IPlayer.OnStart()
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnStart()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnStart
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 32
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nExecuted when player object is created.\n"
  example: []
  syntax:
    content: void OnStart()
    content.vb: Sub OnStart
  overload: PluginAPI.Core.Interfaces.IPlayer.OnStart*
- uid: PluginAPI.Core.Interfaces.IPlayer.OnDestroy
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.OnDestroy
  id: OnDestroy
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: IPlayer.OnDestroy()
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnDestroy()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnDestroy
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 37
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nExecuted when player object is destroyed.\n"
  example: []
  syntax:
    content: void OnDestroy()
    content.vb: Sub OnDestroy
  overload: PluginAPI.Core.Interfaces.IPlayer.OnDestroy*
- uid: PluginAPI.Core.Interfaces.IPlayer.OnUpdate
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.OnUpdate
  id: OnUpdate
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: OnUpdate()
  nameWithType: IPlayer.OnUpdate()
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnUpdate()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnUpdate
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 42
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nExecuted every frame.\n"
  example: []
  syntax:
    content: void OnUpdate()
    content.vb: Sub OnUpdate
  overload: PluginAPI.Core.Interfaces.IPlayer.OnUpdate*
- uid: PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate
  id: OnLateUpdate
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: OnLateUpdate()
  nameWithType: IPlayer.OnLateUpdate()
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnLateUpdate
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 47
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nExecuted after all OnUpdate functions have been called.\n"
  example: []
  syntax:
    content: void OnLateUpdate()
    content.vb: Sub OnLateUpdate
  overload: PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate*
- uid: PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate
  id: OnFixedUpdate
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: OnFixedUpdate()
  nameWithType: IPlayer.OnFixedUpdate()
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnFixedUpdate
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 53
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nExecuted with the frequency of the physics system.\n<remarks>Unity&apos;s physics engine runs at 50hz by default.</remarks>\n"
  example: []
  syntax:
    content: void OnFixedUpdate()
    content.vb: Sub OnFixedUpdate
  overload: PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate*
- uid: PluginAPI.Core.Interfaces.IPlayer.GetComponent``1(System.Boolean)
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.GetComponent``1(System.Boolean)
  id: GetComponent``1(System.Boolean)
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: GetComponent<T>(Boolean)
  nameWithType: IPlayer.GetComponent<T>(Boolean)
  fullName: PluginAPI.Core.Interfaces.IPlayer.GetComponent<T>(System.Boolean)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: GetComponent
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 58
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets the <xref href=\"UnityEngine.MonoBehaviour\" data-throw-if-not-resolved=\"false\"></xref> and caches it.\n"
  example: []
  syntax:
    content: >-
      T GetComponent<T>(bool globalSearch = false)
          where T : MonoBehaviour
    parameters:
    - id: globalSearch
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetComponent(Of T As MonoBehaviour)(globalSearch As Boolean = False) As T
  overload: PluginAPI.Core.Interfaces.IPlayer.GetComponent*
  nameWithType.vb: IPlayer.GetComponent(Of T)(Boolean)
  fullName.vb: PluginAPI.Core.Interfaces.IPlayer.GetComponent(Of T)(System.Boolean)
  name.vb: GetComponent(Of T)(Boolean)
- uid: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent``1(``0@,System.Boolean)
  commentId: M:PluginAPI.Core.Interfaces.IPlayer.TryGetComponent``1(``0@,System.Boolean)
  id: TryGetComponent``1(``0@,System.Boolean)
  parent: PluginAPI.Core.Interfaces.IPlayer
  langs:
  - csharp
  - vb
  name: TryGetComponent<T>(out T, Boolean)
  nameWithType: IPlayer.TryGetComponent<T>(out T, Boolean)
  fullName: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent<T>(out T, System.Boolean)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Interfaces/IPlayer.cs
      branch: dev
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TryGetComponent
    path: ../NwPluginAPI/Core/Interfaces/IPlayer.cs
    startLine: 63
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Interfaces
  summary: "\nGets the <xref href=\"UnityEngine.MonoBehaviour\" data-throw-if-not-resolved=\"false\"></xref> and caches it.\n"
  example: []
  syntax:
    content: >-
      bool TryGetComponent<T>(out T component, bool globalSearch = false)
          where T : MonoBehaviour
    parameters:
    - id: component
      type: '{T}'
    - id: globalSearch
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Function TryGetComponent(Of T As MonoBehaviour)(ByRef component As T, globalSearch As Boolean = False) As Boolean
  overload: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent*
  nameWithType.vb: IPlayer.TryGetComponent(Of T)(ByRef T, Boolean)
  fullName.vb: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent(Of T)(ByRef T, System.Boolean)
  name.vb: TryGetComponent(Of T)(ByRef T, Boolean)
references:
- uid: PluginAPI.Core.Interfaces
  commentId: N:PluginAPI.Core.Interfaces
  name: PluginAPI.Core.Interfaces
  nameWithType: PluginAPI.Core.Interfaces
  fullName: PluginAPI.Core.Interfaces
- uid: PluginAPI.Core.Interfaces.IPlayer.IsServer*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.IsServer
  name: IsServer
  nameWithType: IPlayer.IsServer
  fullName: PluginAPI.Core.Interfaces.IPlayer.IsServer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ReferenceHub
  commentId: T:ReferenceHub
  isExternal: true
  name: ReferenceHub
  nameWithType: ReferenceHub
  fullName: ReferenceHub
- uid: PluginAPI.Core.Interfaces.IPlayer.ReferenceHub*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
  name: ReferenceHub
  nameWithType: IPlayer.ReferenceHub
  fullName: PluginAPI.Core.Interfaces.IPlayer.ReferenceHub
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: PluginAPI.Core.Interfaces.IPlayer.GameObject*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.GameObject
  name: GameObject
  nameWithType: IPlayer.GameObject
  fullName: PluginAPI.Core.Interfaces.IPlayer.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: PluginAPI.Core.Interfaces.IPlayer.TemporaryData*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.TemporaryData
  name: TemporaryData
  nameWithType: IPlayer.TemporaryData
  fullName: PluginAPI.Core.Interfaces.IPlayer.TemporaryData
- uid: PluginAPI.Core.DataStorage
  commentId: T:PluginAPI.Core.DataStorage
  parent: PluginAPI.Core
  name: DataStorage
  nameWithType: DataStorage
  fullName: PluginAPI.Core.DataStorage
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: PluginAPI.Core.Interfaces.IPlayer.OnStart*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.OnStart
  name: OnStart
  nameWithType: IPlayer.OnStart
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnStart
- uid: PluginAPI.Core.Interfaces.IPlayer.OnDestroy*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.OnDestroy
  name: OnDestroy
  nameWithType: IPlayer.OnDestroy
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnDestroy
- uid: PluginAPI.Core.Interfaces.IPlayer.OnUpdate*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.OnUpdate
  name: OnUpdate
  nameWithType: IPlayer.OnUpdate
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnUpdate
- uid: PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate
  name: OnLateUpdate
  nameWithType: IPlayer.OnLateUpdate
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnLateUpdate
- uid: PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate
  name: OnFixedUpdate
  nameWithType: IPlayer.OnFixedUpdate
  fullName: PluginAPI.Core.Interfaces.IPlayer.OnFixedUpdate
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  isExternal: true
- uid: PluginAPI.Core.Interfaces.IPlayer.GetComponent*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.GetComponent
  name: GetComponent
  nameWithType: IPlayer.GetComponent
  fullName: PluginAPI.Core.Interfaces.IPlayer.GetComponent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent*
  commentId: Overload:PluginAPI.Core.Interfaces.IPlayer.TryGetComponent
  name: TryGetComponent
  nameWithType: IPlayer.TryGetComponent
  fullName: PluginAPI.Core.Interfaces.IPlayer.TryGetComponent
