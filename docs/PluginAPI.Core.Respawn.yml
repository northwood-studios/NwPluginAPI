### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Respawn
  commentId: T:PluginAPI.Core.Respawn
  id: Respawn
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.Respawn.AddTickets(Respawning.SpawnableTeamType,System.Single)
  - PluginAPI.Core.Respawn.ChaosTickets
  - PluginAPI.Core.Respawn.NextKnownTeam
  - PluginAPI.Core.Respawn.NtfTickets
  - PluginAPI.Core.Respawn.Spawn(Respawning.SpawnableTeamType,System.Boolean)
  langs:
  - csharp
  - vb
  name: Respawn
  nameWithType: Respawn
  fullName: PluginAPI.Core.Respawn
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: Respawn
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 8
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nHandles respawning\n"
  example: []
  syntax:
    content: public static class Respawn
    content.vb: Public Module Respawn
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PluginAPI.Core.Respawn.NtfTickets
  commentId: P:PluginAPI.Core.Respawn.NtfTickets
  id: NtfTickets
  parent: PluginAPI.Core.Respawn
  langs:
  - csharp
  - vb
  name: NtfTickets
  nameWithType: Respawn.NtfTickets
  fullName: PluginAPI.Core.Respawn.NtfTickets
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: NtfTickets
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 13
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the amount of NTF tickets left.\n"
  example: []
  syntax:
    content: public static float NtfTickets { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property NtfTickets As Single
  overload: PluginAPI.Core.Respawn.NtfTickets*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Respawn.ChaosTickets
  commentId: P:PluginAPI.Core.Respawn.ChaosTickets
  id: ChaosTickets
  parent: PluginAPI.Core.Respawn
  langs:
  - csharp
  - vb
  name: ChaosTickets
  nameWithType: Respawn.ChaosTickets
  fullName: PluginAPI.Core.Respawn.ChaosTickets
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: ChaosTickets
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 18
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the amount of chaos tickets left.\n"
  example: []
  syntax:
    content: public static float ChaosTickets { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property ChaosTickets As Single
  overload: PluginAPI.Core.Respawn.ChaosTickets*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Respawn.NextKnownTeam
  commentId: P:PluginAPI.Core.Respawn.NextKnownTeam
  id: NextKnownTeam
  parent: PluginAPI.Core.Respawn
  langs:
  - csharp
  - vb
  name: NextKnownTeam
  nameWithType: Respawn.NextKnownTeam
  fullName: PluginAPI.Core.Respawn.NextKnownTeam
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: NextKnownTeam
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 23
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the next team which will be spawned.\n"
  example: []
  syntax:
    content: public static SpawnableTeamType NextKnownTeam { get; }
    parameters: []
    return:
      type: Respawning.SpawnableTeamType
    content.vb: Public Shared ReadOnly Property NextKnownTeam As SpawnableTeamType
  overload: PluginAPI.Core.Respawn.NextKnownTeam*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Respawn.AddTickets(Respawning.SpawnableTeamType,System.Single)
  commentId: M:PluginAPI.Core.Respawn.AddTickets(Respawning.SpawnableTeamType,System.Single)
  id: AddTickets(Respawning.SpawnableTeamType,System.Single)
  parent: PluginAPI.Core.Respawn
  langs:
  - csharp
  - vb
  name: AddTickets(SpawnableTeamType, Single)
  nameWithType: Respawn.AddTickets(SpawnableTeamType, Single)
  fullName: PluginAPI.Core.Respawn.AddTickets(Respawning.SpawnableTeamType, System.Single)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: AddTickets
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 30
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nAdds tickets to a specific team.\n"
  example: []
  syntax:
    content: public static void AddTickets(SpawnableTeamType team, float amount)
    parameters:
    - id: team
      type: Respawning.SpawnableTeamType
      description: The team to add tickets to.
    - id: amount
      type: System.Single
      description: The amount of tickets to add.
    content.vb: Public Shared Sub AddTickets(team As SpawnableTeamType, amount As Single)
  overload: PluginAPI.Core.Respawn.AddTickets*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Respawn.Spawn(Respawning.SpawnableTeamType,System.Boolean)
  commentId: M:PluginAPI.Core.Respawn.Spawn(Respawning.SpawnableTeamType,System.Boolean)
  id: Spawn(Respawning.SpawnableTeamType,System.Boolean)
  parent: PluginAPI.Core.Respawn
  langs:
  - csharp
  - vb
  name: Spawn(SpawnableTeamType, Boolean)
  nameWithType: Respawn.Spawn(SpawnableTeamType, Boolean)
  fullName: PluginAPI.Core.Respawn.Spawn(Respawning.SpawnableTeamType, System.Boolean)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Respawn.cs
      branch: master
      repo: git@github.com:northwood-studios/NwPluginAPI.git
    id: Spawn
    path: ../NwPluginAPI/Core/Respawn.cs
    startLine: 37
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nSpawns a specific team.\n"
  example: []
  syntax:
    content: public static void Spawn(SpawnableTeamType team, bool playEffects = false)
    parameters:
    - id: team
      type: Respawning.SpawnableTeamType
      description: The team to spawn.
    - id: playEffects
      type: System.Boolean
      description: Plays spawn effects.
    content.vb: Public Shared Sub Spawn(team As SpawnableTeamType, playEffects As Boolean = False)
  overload: PluginAPI.Core.Respawn.Spawn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Respawn.NtfTickets*
  commentId: Overload:PluginAPI.Core.Respawn.NtfTickets
  name: NtfTickets
  nameWithType: Respawn.NtfTickets
  fullName: PluginAPI.Core.Respawn.NtfTickets
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: PluginAPI.Core.Respawn.ChaosTickets*
  commentId: Overload:PluginAPI.Core.Respawn.ChaosTickets
  name: ChaosTickets
  nameWithType: Respawn.ChaosTickets
  fullName: PluginAPI.Core.Respawn.ChaosTickets
- uid: PluginAPI.Core.Respawn.NextKnownTeam*
  commentId: Overload:PluginAPI.Core.Respawn.NextKnownTeam
  name: NextKnownTeam
  nameWithType: Respawn.NextKnownTeam
  fullName: PluginAPI.Core.Respawn.NextKnownTeam
- uid: Respawning.SpawnableTeamType
  commentId: T:Respawning.SpawnableTeamType
  parent: Respawning
  isExternal: true
  name: SpawnableTeamType
  nameWithType: SpawnableTeamType
  fullName: Respawning.SpawnableTeamType
- uid: Respawning
  commentId: N:Respawning
  isExternal: true
  name: Respawning
  nameWithType: Respawning
  fullName: Respawning
- uid: PluginAPI.Core.Respawn.AddTickets*
  commentId: Overload:PluginAPI.Core.Respawn.AddTickets
  name: AddTickets
  nameWithType: Respawn.AddTickets
  fullName: PluginAPI.Core.Respawn.AddTickets
- uid: PluginAPI.Core.Respawn.Spawn*
  commentId: Overload:PluginAPI.Core.Respawn.Spawn
  name: Spawn
  nameWithType: Respawn.Spawn
  fullName: PluginAPI.Core.Respawn.Spawn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
