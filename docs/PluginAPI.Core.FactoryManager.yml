### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.FactoryManager
  commentId: T:PluginAPI.Core.FactoryManager
  id: FactoryManager
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.FactoryManager.Init
  - PluginAPI.Core.FactoryManager.RegisterPlayerFactory(System.Object,PluginAPI.Core.Factories.PlayerFactory)
  - PluginAPI.Core.FactoryManager.RegisterPlayerFactory``1(System.Object)
  langs:
  - csharp
  - vb
  name: FactoryManager
  nameWithType: FactoryManager
  fullName: PluginAPI.Core.FactoryManager
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/FactoryManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: FactoryManager
    path: ../NwPluginAPI/Core/FactoryManager.cs
    startLine: 11
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nManages factories for plugin system.\n"
  example: []
  syntax:
    content: public static class FactoryManager
    content.vb: Public Module FactoryManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PluginAPI.Core.FactoryManager.RegisterPlayerFactory(System.Object,PluginAPI.Core.Factories.PlayerFactory)
  commentId: M:PluginAPI.Core.FactoryManager.RegisterPlayerFactory(System.Object,PluginAPI.Core.Factories.PlayerFactory)
  id: RegisterPlayerFactory(System.Object,PluginAPI.Core.Factories.PlayerFactory)
  parent: PluginAPI.Core.FactoryManager
  langs:
  - csharp
  - vb
  name: RegisterPlayerFactory(Object, PlayerFactory)
  nameWithType: FactoryManager.RegisterPlayerFactory(Object, PlayerFactory)
  fullName: PluginAPI.Core.FactoryManager.RegisterPlayerFactory(System.Object, PluginAPI.Core.Factories.PlayerFactory)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/FactoryManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: RegisterPlayerFactory
    path: ../NwPluginAPI/Core/FactoryManager.cs
    startLine: 28
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRegisters a new player factory.\n"
  example: []
  syntax:
    content: public static void RegisterPlayerFactory(object plugin, PlayerFactory factory)
    parameters:
    - id: plugin
      type: System.Object
      description: The plugin object.
    - id: factory
      type: PluginAPI.Core.Factories.PlayerFactory
      description: The factory.
    content.vb: Public Shared Sub RegisterPlayerFactory(plugin As Object, factory As PlayerFactory)
  overload: PluginAPI.Core.FactoryManager.RegisterPlayerFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.FactoryManager.RegisterPlayerFactory``1(System.Object)
  commentId: M:PluginAPI.Core.FactoryManager.RegisterPlayerFactory``1(System.Object)
  id: RegisterPlayerFactory``1(System.Object)
  parent: PluginAPI.Core.FactoryManager
  langs:
  - csharp
  - vb
  name: RegisterPlayerFactory<T>(Object)
  nameWithType: FactoryManager.RegisterPlayerFactory<T>(Object)
  fullName: PluginAPI.Core.FactoryManager.RegisterPlayerFactory<T>(System.Object)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/FactoryManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: RegisterPlayerFactory
    path: ../NwPluginAPI/Core/FactoryManager.cs
    startLine: 42
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRegisters a new player factory.\n"
  example: []
  syntax:
    content: >-
      public static void RegisterPlayerFactory<T>(object plugin)
          where T : PlayerFactory
    parameters:
    - id: plugin
      type: System.Object
      description: The plugin object.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub RegisterPlayerFactory(Of T As PlayerFactory)(plugin As Object)
  overload: PluginAPI.Core.FactoryManager.RegisterPlayerFactory*
  nameWithType.vb: FactoryManager.RegisterPlayerFactory(Of T)(Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PluginAPI.Core.FactoryManager.RegisterPlayerFactory(Of T)(System.Object)
  name.vb: RegisterPlayerFactory(Of T)(Object)
- uid: PluginAPI.Core.FactoryManager.Init
  commentId: M:PluginAPI.Core.FactoryManager.Init
  id: Init
  parent: PluginAPI.Core.FactoryManager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: FactoryManager.Init()
  fullName: PluginAPI.Core.FactoryManager.Init()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/FactoryManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Init
    path: ../NwPluginAPI/Core/FactoryManager.cs
    startLine: 47
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nInitializes the factory manager.\n"
  example: []
  syntax:
    content: public static void Init()
    content.vb: Public Shared Sub Init
  overload: PluginAPI.Core.FactoryManager.Init*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.FactoryManager.RegisterPlayerFactory*
  commentId: Overload:PluginAPI.Core.FactoryManager.RegisterPlayerFactory
  name: RegisterPlayerFactory
  nameWithType: FactoryManager.RegisterPlayerFactory
  fullName: PluginAPI.Core.FactoryManager.RegisterPlayerFactory
- uid: PluginAPI.Core.Factories.PlayerFactory
  commentId: T:PluginAPI.Core.Factories.PlayerFactory
  parent: PluginAPI.Core.Factories
  name: PlayerFactory
  nameWithType: PlayerFactory
  fullName: PluginAPI.Core.Factories.PlayerFactory
- uid: PluginAPI.Core.Factories
  commentId: N:PluginAPI.Core.Factories
  name: PluginAPI.Core.Factories
  nameWithType: PluginAPI.Core.Factories
  fullName: PluginAPI.Core.Factories
- uid: PluginAPI.Core.FactoryManager.Init*
  commentId: Overload:PluginAPI.Core.FactoryManager.Init
  name: Init
  nameWithType: FactoryManager.Init
  fullName: PluginAPI.Core.FactoryManager.Init
