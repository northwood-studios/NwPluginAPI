### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  commentId: T:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  id: PocketDimensionLogic
  parent: PluginAPI.Core.Zones.Pocket
  children:
  - PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor(PluginAPI.Core.Zones.Pocket.PocketDimension)
  - PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy
  - PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD(PluginAPI.Core.Player,PluginAPI.Core.Player)
  - PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal(PluginAPI.Core.Player,PocketDimensionTeleport.PDTeleportType)
  - PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimension
  langs:
  - csharp
  - vb
  name: PocketDimensionLogic
  nameWithType: PocketDimensionLogic
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: PocketDimensionLogic
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 7
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  summary: "\nHandles the Pocket Dimension&apos;s logic.\n"
  example: []
  syntax:
    content: public class PocketDimensionLogic
    content.vb: Public Class PocketDimensionLogic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimension
  commentId: F:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimension
  id: PocketDimension
  parent: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  langs:
  - csharp
  - vb
  name: PocketDimension
  nameWithType: PocketDimensionLogic.PocketDimension
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimension
  type: Field
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: PocketDimension
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 12
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  summary: "\nThe pocket dimension.\n"
  example: []
  syntax:
    content: public readonly PocketDimension PocketDimension
    return:
      type: PluginAPI.Core.Zones.Pocket.PocketDimension
    content.vb: Public ReadOnly PocketDimension As PocketDimension
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal(PluginAPI.Core.Player,PocketDimensionTeleport.PDTeleportType)
  commentId: M:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal(PluginAPI.Core.Player,PocketDimensionTeleport.PDTeleportType)
  id: OnPlayerEnteredPortal(PluginAPI.Core.Player,PocketDimensionTeleport.PDTeleportType)
  parent: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  langs:
  - csharp
  - vb
  name: OnPlayerEnteredPortal(Player, PocketDimensionTeleport.PDTeleportType)
  nameWithType: PocketDimensionLogic.OnPlayerEnteredPortal(Player, PocketDimensionTeleport.PDTeleportType)
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal(PluginAPI.Core.Player, PocketDimensionTeleport.PDTeleportType)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnPlayerEnteredPortal
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 14
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  syntax:
    content: public virtual bool OnPlayerEnteredPortal(Player plr, PocketDimensionTeleport.PDTeleportType type)
    parameters:
    - id: plr
      type: PluginAPI.Core.Player
    - id: type
      type: PocketDimensionTeleport.PDTeleportType
    return:
      type: System.Boolean
    content.vb: Public Overridable Function OnPlayerEnteredPortal(plr As Player, type As PocketDimensionTeleport.PDTeleportType) As Boolean
  overload: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD(PluginAPI.Core.Player,PluginAPI.Core.Player)
  commentId: M:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD(PluginAPI.Core.Player,PluginAPI.Core.Player)
  id: OnPlayerEnteredPD(PluginAPI.Core.Player,PluginAPI.Core.Player)
  parent: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  langs:
  - csharp
  - vb
  name: OnPlayerEnteredPD(Player, Player)
  nameWithType: PocketDimensionLogic.OnPlayerEnteredPD(Player, Player)
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD(PluginAPI.Core.Player, PluginAPI.Core.Player)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnPlayerEnteredPD
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 19
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  syntax:
    content: public virtual bool OnPlayerEnteredPD(Player plr, Player movedBy)
    parameters:
    - id: plr
      type: PluginAPI.Core.Player
    - id: movedBy
      type: PluginAPI.Core.Player
    return:
      type: System.Boolean
    content.vb: Public Overridable Function OnPlayerEnteredPD(plr As Player, movedBy As Player) As Boolean
  overload: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy
  commentId: M:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy
  id: OnDestroy
  parent: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: PocketDimensionLogic.OnDestroy()
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OnDestroy
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 24
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  syntax:
    content: public virtual void OnDestroy()
    content.vb: Public Overridable Sub OnDestroy
  overload: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor(PluginAPI.Core.Zones.Pocket.PocketDimension)
  commentId: M:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor(PluginAPI.Core.Zones.Pocket.PocketDimension)
  id: '#ctor(PluginAPI.Core.Zones.Pocket.PocketDimension)'
  parent: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  langs:
  - csharp
  - vb
  name: PocketDimensionLogic(PocketDimension)
  nameWithType: PocketDimensionLogic.PocketDimensionLogic(PocketDimension)
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimensionLogic(PluginAPI.Core.Zones.Pocket.PocketDimension)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Core/Zones/Pocket/PocketDimensionLogic.cs
    startLine: 33
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core.Zones.Pocket
  summary: "\nInitializes a new instance of the <xref href=\"PluginAPI.Core.Zones.Pocket.PocketDimensionLogic\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PocketDimensionLogic(PocketDimension pd)
    parameters:
    - id: pd
      type: PluginAPI.Core.Zones.Pocket.PocketDimension
      description: The pocket dimension.
    content.vb: Public Sub New(pd As PocketDimension)
  overload: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PluginAPI.Core.Zones.Pocket
  commentId: N:PluginAPI.Core.Zones.Pocket
  name: PluginAPI.Core.Zones.Pocket
  nameWithType: PluginAPI.Core.Zones.Pocket
  fullName: PluginAPI.Core.Zones.Pocket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Zones.Pocket.PocketDimension
  commentId: T:PluginAPI.Core.Zones.Pocket.PocketDimension
  parent: PluginAPI.Core.Zones.Pocket
  name: PocketDimension
  nameWithType: PocketDimension
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimension
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal*
  commentId: Overload:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal
  name: OnPlayerEnteredPortal
  nameWithType: PocketDimensionLogic.OnPlayerEnteredPortal
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPortal
- uid: PluginAPI.Core.Player
  commentId: T:PluginAPI.Core.Player
  parent: PluginAPI.Core
  name: Player
  nameWithType: Player
  fullName: PluginAPI.Core.Player
- uid: PocketDimensionTeleport.PDTeleportType
  commentId: T:PocketDimensionTeleport.PDTeleportType
  isExternal: true
  name: PocketDimensionTeleport.PDTeleportType
  nameWithType: PocketDimensionTeleport.PDTeleportType
  fullName: PocketDimensionTeleport.PDTeleportType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD*
  commentId: Overload:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD
  name: OnPlayerEnteredPD
  nameWithType: PocketDimensionLogic.OnPlayerEnteredPD
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnPlayerEnteredPD
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy*
  commentId: Overload:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy
  name: OnDestroy
  nameWithType: PocketDimensionLogic.OnDestroy
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.OnDestroy
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  commentId: T:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
  parent: PluginAPI.Core.Zones.Pocket
  name: PocketDimensionLogic
  nameWithType: PocketDimensionLogic
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic
- uid: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor*
  commentId: Overload:PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.#ctor
  name: PocketDimensionLogic
  nameWithType: PocketDimensionLogic.PocketDimensionLogic
  fullName: PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.PocketDimensionLogic
