### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Facility
  commentId: T:PluginAPI.Core.Facility
  id: Facility
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.Facility.Doors
  - PluginAPI.Core.Facility.GetRoom(MapGeneration.RoomIdentifier)
  - PluginAPI.Core.Facility.RegisterDoor(MapGeneration.DoorSpawnpoint,Interactables.Interobjects.DoorUtils.DoorVariant)
  - PluginAPI.Core.Facility.RegisterDoors(PluginAPI.Core.Zones.FacilityRoom,Interactables.Interobjects.DoorUtils.DoorVariant[])
  - PluginAPI.Core.Facility.Reset
  - PluginAPI.Core.Facility.Rooms
  - PluginAPI.Core.Facility.TurnOffAllLights
  - PluginAPI.Core.Facility.TurnOnAllLights
  langs:
  - csharp
  - vb
  name: Facility
  nameWithType: Facility
  fullName: PluginAPI.Core.Facility
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Facility
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 16
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRepresents the facility.\n"
  example: []
  syntax:
    content: public class Facility
    content.vb: Public Class Facility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.Facility.GetRoom(MapGeneration.RoomIdentifier)
  commentId: M:PluginAPI.Core.Facility.GetRoom(MapGeneration.RoomIdentifier)
  id: GetRoom(MapGeneration.RoomIdentifier)
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: GetRoom(RoomIdentifier)
  nameWithType: Facility.GetRoom(RoomIdentifier)
  fullName: PluginAPI.Core.Facility.GetRoom(MapGeneration.RoomIdentifier)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: GetRoom
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 29
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public static FacilityRoom GetRoom(RoomIdentifier roomIdentity)
    parameters:
    - id: roomIdentity
      type: MapGeneration.RoomIdentifier
    return:
      type: PluginAPI.Core.Zones.FacilityRoom
    content.vb: Public Shared Function GetRoom(roomIdentity As RoomIdentifier) As FacilityRoom
  overload: PluginAPI.Core.Facility.GetRoom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Facility.RegisterDoors(PluginAPI.Core.Zones.FacilityRoom,Interactables.Interobjects.DoorUtils.DoorVariant[])
  commentId: M:PluginAPI.Core.Facility.RegisterDoors(PluginAPI.Core.Zones.FacilityRoom,Interactables.Interobjects.DoorUtils.DoorVariant[])
  id: RegisterDoors(PluginAPI.Core.Zones.FacilityRoom,Interactables.Interobjects.DoorUtils.DoorVariant[])
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: RegisterDoors(FacilityRoom, DoorVariant[])
  nameWithType: Facility.RegisterDoors(FacilityRoom, DoorVariant[])
  fullName: PluginAPI.Core.Facility.RegisterDoors(PluginAPI.Core.Zones.FacilityRoom, Interactables.Interobjects.DoorUtils.DoorVariant[])
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: RegisterDoors
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 101
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public static void RegisterDoors(FacilityRoom room, DoorVariant[] doors)
    parameters:
    - id: room
      type: PluginAPI.Core.Zones.FacilityRoom
    - id: doors
      type: Interactables.Interobjects.DoorUtils.DoorVariant[]
    content.vb: Public Shared Sub RegisterDoors(room As FacilityRoom, doors As DoorVariant())
  overload: PluginAPI.Core.Facility.RegisterDoors*
  nameWithType.vb: Facility.RegisterDoors(FacilityRoom, DoorVariant())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PluginAPI.Core.Facility.RegisterDoors(PluginAPI.Core.Zones.FacilityRoom, Interactables.Interobjects.DoorUtils.DoorVariant())
  name.vb: RegisterDoors(FacilityRoom, DoorVariant())
- uid: PluginAPI.Core.Facility.RegisterDoor(MapGeneration.DoorSpawnpoint,Interactables.Interobjects.DoorUtils.DoorVariant)
  commentId: M:PluginAPI.Core.Facility.RegisterDoor(MapGeneration.DoorSpawnpoint,Interactables.Interobjects.DoorUtils.DoorVariant)
  id: RegisterDoor(MapGeneration.DoorSpawnpoint,Interactables.Interobjects.DoorUtils.DoorVariant)
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: RegisterDoor(DoorSpawnpoint, DoorVariant)
  nameWithType: Facility.RegisterDoor(DoorSpawnpoint, DoorVariant)
  fullName: PluginAPI.Core.Facility.RegisterDoor(MapGeneration.DoorSpawnpoint, Interactables.Interobjects.DoorUtils.DoorVariant)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: RegisterDoor
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 123
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public static void RegisterDoor(DoorSpawnpoint spawnpoint, DoorVariant door)
    parameters:
    - id: spawnpoint
      type: MapGeneration.DoorSpawnpoint
    - id: door
      type: Interactables.Interobjects.DoorUtils.DoorVariant
    content.vb: Public Shared Sub RegisterDoor(spawnpoint As DoorSpawnpoint, door As DoorVariant)
  overload: PluginAPI.Core.Facility.RegisterDoor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Facility.Reset
  commentId: M:PluginAPI.Core.Facility.Reset
  id: Reset
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Facility.Reset()
  fullName: PluginAPI.Core.Facility.Reset()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Reset
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 143
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  overload: PluginAPI.Core.Facility.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Facility.Rooms
  commentId: P:PluginAPI.Core.Facility.Rooms
  id: Rooms
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: Rooms
  nameWithType: Facility.Rooms
  fullName: PluginAPI.Core.Facility.Rooms
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Rooms
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 151
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets all rooms in facility.\n"
  example: []
  syntax:
    content: public static List<FacilityRoom> Rooms { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PluginAPI.Core.Zones.FacilityRoom}
    content.vb: Public Shared ReadOnly Property Rooms As List(Of FacilityRoom)
  overload: PluginAPI.Core.Facility.Rooms*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Facility.Doors
  commentId: P:PluginAPI.Core.Facility.Doors
  id: Doors
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: Doors
  nameWithType: Facility.Doors
  fullName: PluginAPI.Core.Facility.Doors
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Doors
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 156
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets all doors in facility.\n"
  example: []
  syntax:
    content: public static List<FacilityDoor> Doors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PluginAPI.Core.Doors.FacilityDoor}
    content.vb: Public Shared ReadOnly Property Doors As List(Of FacilityDoor)
  overload: PluginAPI.Core.Facility.Doors*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Facility.TurnOnAllLights
  commentId: M:PluginAPI.Core.Facility.TurnOnAllLights
  id: TurnOnAllLights
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: TurnOnAllLights()
  nameWithType: Facility.TurnOnAllLights()
  fullName: PluginAPI.Core.Facility.TurnOnAllLights()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TurnOnAllLights
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 161
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nTurns on all lights in facility.\n"
  example: []
  syntax:
    content: public static void TurnOnAllLights()
    content.vb: Public Shared Sub TurnOnAllLights
  overload: PluginAPI.Core.Facility.TurnOnAllLights*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Facility.TurnOffAllLights
  commentId: M:PluginAPI.Core.Facility.TurnOffAllLights
  id: TurnOffAllLights
  parent: PluginAPI.Core.Facility
  langs:
  - csharp
  - vb
  name: TurnOffAllLights()
  nameWithType: Facility.TurnOffAllLights()
  fullName: PluginAPI.Core.Facility.TurnOffAllLights()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Facility.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TurnOffAllLights
    path: ../NwPluginAPI/Core/Facility.cs
    startLine: 169
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nTurns off all lights in facility.\n"
  example: []
  syntax:
    content: public static void TurnOffAllLights()
    content.vb: Public Shared Sub TurnOffAllLights
  overload: PluginAPI.Core.Facility.TurnOffAllLights*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Facility.GetRoom*
  commentId: Overload:PluginAPI.Core.Facility.GetRoom
  name: GetRoom
  nameWithType: Facility.GetRoom
  fullName: PluginAPI.Core.Facility.GetRoom
- uid: MapGeneration.RoomIdentifier
  commentId: T:MapGeneration.RoomIdentifier
  parent: MapGeneration
  isExternal: true
  name: RoomIdentifier
  nameWithType: RoomIdentifier
  fullName: MapGeneration.RoomIdentifier
- uid: PluginAPI.Core.Zones.FacilityRoom
  commentId: T:PluginAPI.Core.Zones.FacilityRoom
  parent: PluginAPI.Core.Zones
  name: FacilityRoom
  nameWithType: FacilityRoom
  fullName: PluginAPI.Core.Zones.FacilityRoom
- uid: MapGeneration
  commentId: N:MapGeneration
  isExternal: true
  name: MapGeneration
  nameWithType: MapGeneration
  fullName: MapGeneration
- uid: PluginAPI.Core.Zones
  commentId: N:PluginAPI.Core.Zones
  name: PluginAPI.Core.Zones
  nameWithType: PluginAPI.Core.Zones
  fullName: PluginAPI.Core.Zones
- uid: PluginAPI.Core.Facility.RegisterDoors*
  commentId: Overload:PluginAPI.Core.Facility.RegisterDoors
  name: RegisterDoors
  nameWithType: Facility.RegisterDoors
  fullName: PluginAPI.Core.Facility.RegisterDoors
- uid: Interactables.Interobjects.DoorUtils.DoorVariant[]
  isExternal: true
  name: DoorVariant[]
  nameWithType: DoorVariant[]
  fullName: Interactables.Interobjects.DoorUtils.DoorVariant[]
  nameWithType.vb: DoorVariant()
  fullName.vb: Interactables.Interobjects.DoorUtils.DoorVariant()
  name.vb: DoorVariant()
  spec.csharp:
  - uid: Interactables.Interobjects.DoorUtils.DoorVariant
    name: DoorVariant
    nameWithType: DoorVariant
    fullName: Interactables.Interobjects.DoorUtils.DoorVariant
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Interactables.Interobjects.DoorUtils.DoorVariant
    name: DoorVariant
    nameWithType: DoorVariant
    fullName: Interactables.Interobjects.DoorUtils.DoorVariant
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PluginAPI.Core.Facility.RegisterDoor*
  commentId: Overload:PluginAPI.Core.Facility.RegisterDoor
  name: RegisterDoor
  nameWithType: Facility.RegisterDoor
  fullName: PluginAPI.Core.Facility.RegisterDoor
- uid: MapGeneration.DoorSpawnpoint
  commentId: T:MapGeneration.DoorSpawnpoint
  parent: MapGeneration
  isExternal: true
  name: DoorSpawnpoint
  nameWithType: DoorSpawnpoint
  fullName: MapGeneration.DoorSpawnpoint
- uid: Interactables.Interobjects.DoorUtils.DoorVariant
  commentId: T:Interactables.Interobjects.DoorUtils.DoorVariant
  parent: Interactables.Interobjects.DoorUtils
  isExternal: true
  name: DoorVariant
  nameWithType: DoorVariant
  fullName: Interactables.Interobjects.DoorUtils.DoorVariant
- uid: Interactables.Interobjects.DoorUtils
  commentId: N:Interactables.Interobjects.DoorUtils
  isExternal: true
  name: Interactables.Interobjects.DoorUtils
  nameWithType: Interactables.Interobjects.DoorUtils
  fullName: Interactables.Interobjects.DoorUtils
- uid: PluginAPI.Core.Facility.Reset*
  commentId: Overload:PluginAPI.Core.Facility.Reset
  name: Reset
  nameWithType: Facility.Reset
  fullName: PluginAPI.Core.Facility.Reset
- uid: PluginAPI.Core.Facility.Rooms*
  commentId: Overload:PluginAPI.Core.Facility.Rooms
  name: Rooms
  nameWithType: Facility.Rooms
  fullName: PluginAPI.Core.Facility.Rooms
- uid: System.Collections.Generic.List{PluginAPI.Core.Zones.FacilityRoom}
  commentId: T:System.Collections.Generic.List{PluginAPI.Core.Zones.FacilityRoom}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FacilityRoom>
  nameWithType: List<FacilityRoom>
  fullName: System.Collections.Generic.List<PluginAPI.Core.Zones.FacilityRoom>
  nameWithType.vb: List(Of FacilityRoom)
  fullName.vb: System.Collections.Generic.List(Of PluginAPI.Core.Zones.FacilityRoom)
  name.vb: List(Of FacilityRoom)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PluginAPI.Core.Zones.FacilityRoom
    name: FacilityRoom
    nameWithType: FacilityRoom
    fullName: PluginAPI.Core.Zones.FacilityRoom
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PluginAPI.Core.Zones.FacilityRoom
    name: FacilityRoom
    nameWithType: FacilityRoom
    fullName: PluginAPI.Core.Zones.FacilityRoom
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PluginAPI.Core.Facility.Doors*
  commentId: Overload:PluginAPI.Core.Facility.Doors
  name: Doors
  nameWithType: Facility.Doors
  fullName: PluginAPI.Core.Facility.Doors
- uid: System.Collections.Generic.List{PluginAPI.Core.Doors.FacilityDoor}
  commentId: T:System.Collections.Generic.List{PluginAPI.Core.Doors.FacilityDoor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FacilityDoor>
  nameWithType: List<FacilityDoor>
  fullName: System.Collections.Generic.List<PluginAPI.Core.Doors.FacilityDoor>
  nameWithType.vb: List(Of FacilityDoor)
  fullName.vb: System.Collections.Generic.List(Of PluginAPI.Core.Doors.FacilityDoor)
  name.vb: List(Of FacilityDoor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PluginAPI.Core.Doors.FacilityDoor
    name: FacilityDoor
    nameWithType: FacilityDoor
    fullName: PluginAPI.Core.Doors.FacilityDoor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PluginAPI.Core.Doors.FacilityDoor
    name: FacilityDoor
    nameWithType: FacilityDoor
    fullName: PluginAPI.Core.Doors.FacilityDoor
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Facility.TurnOnAllLights*
  commentId: Overload:PluginAPI.Core.Facility.TurnOnAllLights
  name: TurnOnAllLights
  nameWithType: Facility.TurnOnAllLights
  fullName: PluginAPI.Core.Facility.TurnOnAllLights
- uid: PluginAPI.Core.Facility.TurnOffAllLights*
  commentId: Overload:PluginAPI.Core.Facility.TurnOffAllLights
  name: TurnOffAllLights
  nameWithType: Facility.TurnOffAllLights
  fullName: PluginAPI.Core.Facility.TurnOffAllLights
