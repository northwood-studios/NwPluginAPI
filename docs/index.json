{
  "api/index.html": {
    "href": "api/index.html",
    "title": "| Nw Plugin API",
    "keywords": "W.I.P"
  },
  "api/PluginAPI.Commands.Command.html": {
    "href": "api/PluginAPI.Commands.Command.html",
    "title": "Class Command | Nw Plugin API",
    "keywords": "Class Command Represents a command that can be executed. Inheritance System.Object Command Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Commands Assembly : PluginAPI.dll Syntax public class Command Fields | Improve this Doc View Source Object Declaration public ICommand Object Field Value Type Description CommandSystem.ICommand | Improve this Doc View Source Plugin Declaration public PluginHandler Plugin Field Value Type Description PluginHandler"
  },
  "api/PluginAPI.Commands.CommandsManager.html": {
    "href": "api/PluginAPI.Commands.CommandsManager.html",
    "title": "Class CommandsManager | Nw Plugin API",
    "keywords": "Class CommandsManager Manages commands. Inheritance System.Object CommandsManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Commands Assembly : PluginAPI.dll Syntax public class CommandsManager"
  },
  "api/PluginAPI.Commands.html": {
    "href": "api/PluginAPI.Commands.html",
    "title": "Namespace PluginAPI.Commands | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Commands Classes Command Represents a command that can be executed. CommandsManager Manages commands. ListCommand Lists all plugins on the server. PluginsCommand The parent command for the NW-API commands. ReloadCommmand Reloads plugins configs."
  },
  "api/PluginAPI.Commands.ListCommand.html": {
    "href": "api/PluginAPI.Commands.ListCommand.html",
    "title": "Class ListCommand | Nw Plugin API",
    "keywords": "Class ListCommand Lists all plugins on the server. Inheritance System.Object ListCommand Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Commands Assembly : PluginAPI.dll Syntax [CommandHandler(typeof(PluginsCommand))] public class ListCommand : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand"
  },
  "api/PluginAPI.Commands.PluginsCommand.html": {
    "href": "api/PluginAPI.Commands.PluginsCommand.html",
    "title": "Class PluginsCommand | Nw Plugin API",
    "keywords": "Class PluginsCommand The parent command for the NW-API commands. Inheritance System.Object CommandSystem.CommandHandler ParentCommand PluginsCommand Implements CommandSystem.ICommandHandler CommandSystem.ICommand CommandSystem.IUsageProvider Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Commands Assembly : PluginAPI.dll Syntax [CommandHandler(typeof(GameConsoleCommandHandler))] public class PluginsCommand : ParentCommand, ICommandHandler, ICommand, IUsageProvider Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description | Improve this Doc View Source Usage Declaration public string[] Usage { get; } Property Value Type Description System.String [] Methods | Improve this Doc View Source Create() Declaration public static PluginsCommand Create() Returns Type Description PluginsCommand | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand CommandSystem.IUsageProvider"
  },
  "api/PluginAPI.Commands.ReloadCommmand.html": {
    "href": "api/PluginAPI.Commands.ReloadCommmand.html",
    "title": "Class ReloadCommmand | Nw Plugin API",
    "keywords": "Class ReloadCommmand Reloads plugins configs. Inheritance System.Object ReloadCommmand Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Commands Assembly : PluginAPI.dll Syntax [CommandHandler(typeof(PluginsCommand))] public class ReloadCommmand : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand"
  },
  "api/PluginAPI.Core.Attributes.html": {
    "href": "api/PluginAPI.Core.Attributes.html",
    "title": "Namespace PluginAPI.Core.Attributes | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Attributes Classes PluginCommand Marks a class as plugin command. PluginCommandAliases Marks aliases to existing commands. PluginConfig Marks a plugin config. PluginEntryPoint Marks the plugin entrypoint. Called when the plugin is initialized. PluginEvent Marks a plugin event handler method. PluginReload Marks a plugin reloaded event handler. Called when the plugin is reloaded. PluginUnload Marks a plugin unloaded event handler. Called when the plugin is unloaded."
  },
  "api/PluginAPI.Core.Attributes.PluginCommand.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginCommand.html",
    "title": "Class PluginCommand | Nw Plugin API",
    "keywords": "Class PluginCommand Marks a class as plugin command. Inheritance System.Object System.Attribute PluginCommand Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginCommand : Attribute, _Attribute Constructors | Improve this Doc View Source PluginCommand(String, String, CommandType) Initializes a new instance of the PluginCommand class. Declaration public PluginCommand(string name, string description, CommandType type) Parameters Type Name Description System.String name The name of the command. System.String description The description of the command. CommandType type The CommandType of the command. Properties | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public CommandType Type { get; set; } Property Value Type Description CommandType Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginCommandAliases.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginCommandAliases.html",
    "title": "Class PluginCommandAliases | Nw Plugin API",
    "keywords": "Class PluginCommandAliases Marks aliases to existing commands. Inheritance System.Object System.Attribute PluginCommandAliases Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginCommandAliases : Attribute, _Attribute Constructors | Improve this Doc View Source PluginCommandAliases(String[]) Initializes a new instance of the PluginCommandAliases class. Declaration public PluginCommandAliases(string[] aliases) Parameters Type Name Description System.String [] aliases The commands aliases. Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; set; } Property Value Type Description System.String [] Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginConfig.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginConfig.html",
    "title": "Class PluginConfig | Nw Plugin API",
    "keywords": "Class PluginConfig Marks a plugin config. Inheritance System.Object System.Attribute PluginConfig Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class PluginConfig : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginEntryPoint.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginEntryPoint.html",
    "title": "Class PluginEntryPoint | Nw Plugin API",
    "keywords": "Class PluginEntryPoint Marks the plugin entrypoint. Called when the plugin is initialized. Inheritance System.Object System.Attribute PluginEntryPoint Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginEntryPoint : Attribute, _Attribute Constructors | Improve this Doc View Source PluginEntryPoint(String, String, String, String) Initializes a new instance of the PluginEntryPoint class. Declaration public PluginEntryPoint(string pluginName, string pluginVersion, string description, string author) Parameters Type Name Description System.String pluginName The plugin name. System.String pluginVersion The plugin version. System.String description The plugin description. System.String author The plugin author. Properties | Improve this Doc View Source Author Declaration public string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public string Version { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginEvent.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginEvent.html",
    "title": "Class PluginEvent | Nw Plugin API",
    "keywords": "Class PluginEvent Marks a plugin event handler method. Inheritance System.Object System.Attribute PluginEvent Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginEvent : Attribute, _Attribute Constructors | Improve this Doc View Source PluginEvent(ServerEventType) Initializes a new instance of the PluginEvent class. Declaration public PluginEvent(ServerEventType eventType) Parameters Type Name Description ServerEventType eventType The ServerEventType . Properties | Improve this Doc View Source EventType Declaration public ServerEventType EventType { get; } Property Value Type Description ServerEventType Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginReload.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginReload.html",
    "title": "Class PluginReload | Nw Plugin API",
    "keywords": "Class PluginReload Marks a plugin reloaded event handler. Called when the plugin is reloaded. Inheritance System.Object System.Attribute PluginReload Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginReload : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Attributes.PluginUnload.html": {
    "href": "api/PluginAPI.Core.Attributes.PluginUnload.html",
    "title": "Class PluginUnload | Nw Plugin API",
    "keywords": "Class PluginUnload Marks a plugin unloaded event handler. Called when the plugin is unloaded. Inheritance System.Object System.Attribute PluginUnload Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Attributes Assembly : PluginAPI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class PluginUnload : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/PluginAPI.Core.Cassie.html": {
    "href": "api/PluginAPI.Core.Cassie.html",
    "title": "Class Cassie | Nw Plugin API",
    "keywords": "Class Cassie Represents the cassie system in-game. Inheritance System.Object Cassie Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Cassie Properties | Improve this Doc View Source IsSpeaking Gets whether or not CASSIE is speaking. Declaration public static bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source VoiceLines Gets a collection of CASSIE voice lines. Declaration public static IEnumerable<NineTailedFoxAnnouncer.VoiceLine> VoiceLines { get; } Property Value Type Description System.Collections.Generic.IEnumerable < NineTailedFoxAnnouncer.VoiceLine > Methods | Improve this Doc View Source CalculateDuration(String, Boolean) Calculates duration of a CASSIE message. Declaration public static float CalculateDuration(string message, bool rawNumber = false) Parameters Type Name Description System.String message The message. System.Boolean rawNumber Raw number. Returns Type Description System.Single | Improve this Doc View Source Clear() Clears all CASSIE messages in queue. Declaration public static void Clear() | Improve this Doc View Source ConvertNumber(Int32) Converts number into a CASSIE readable word. Declaration public static string ConvertNumber(int num) Parameters Type Name Description System.Int32 num Number to convert. Returns Type Description System.String | Improve this Doc View Source ConvertTeam(Team, String) Converts team into a CASSIE readable unit name. Declaration public static string ConvertTeam(Team team, string unitName) Parameters Type Name Description PlayerRoles.Team team The team. System.String unitName Unit name. Returns Type Description System.String | Improve this Doc View Source GlitchyMessage(String, Single, Single) Send CASSIE message with glitch phrases. Declaration public static void GlitchyMessage(string message, float glitchChance, float jamChance) Parameters Type Name Description System.String message The message. System.Single glitchChance The chance of placing a glitch phrase between each word. System.Single jamChance The chance of jamming each word. | Improve this Doc View Source IsValid(String) Checks whether or not the provided word is a CASSIE readable one. Declaration public static bool IsValid(string word) Parameters Type Name Description System.String word The word. Returns Type Description System.Boolean | Improve this Doc View Source Message(String, Boolean, Boolean, Boolean) Send CASSIE message without glitch phrases. Declaration public static void Message(string message, bool isHeld = false, bool isNoisy = true, bool isSubtitles = false) Parameters Type Name Description System.String message The message. System.Boolean isHeld Whether or not the message is held. System.Boolean isNoisy Whether or not the message starts with intro sound. System.Boolean isSubtitles Whether or not the message includes subtitles. | Improve this Doc View Source ScpTermination(Player, DamageHandlerBase) Forces an scp termination announcement. Declaration public static void ScpTermination(Player player, DamageHandlerBase info) Parameters Type Name Description Player player The player. PlayerStatsSystem.DamageHandlerBase info The damage information."
  },
  "api/PluginAPI.Core.DamageManager.html": {
    "href": "api/PluginAPI.Core.DamageManager.html",
    "title": "Class DamageManager | Nw Plugin API",
    "keywords": "Class DamageManager Manages damage for a player. Inheritance System.Object DamageManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class DamageManager Constructors | Improve this Doc View Source DamageManager(Player) Initializes a new instance of the DamageManager class. Declaration public DamageManager(Player plr) Parameters Type Name Description Player plr The player. Properties | Improve this Doc View Source CanReceiveDamageFromPlayers Gets or sets whether or not player can receive damage from other players. Declaration public bool CanReceiveDamageFromPlayers { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DamageBlacklist Gets a list of players who can't damage this player. Declaration public List<Player> DamageBlacklist { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source DamageWhitelist Gets a list of players who can to damage this player. Declaration public List<Player> DamageWhitelist { get; } Property Value Type Description System.Collections.Generic.List < Player > Methods | Improve this Doc View Source Damage(DamageHandlerBase) Damages player. Declaration public bool Damage(DamageHandlerBase damageHandlerBase) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase damageHandlerBase The damage handler base. Returns Type Description System.Boolean Whether or not damaging was successful. | Improve this Doc View Source Damage(Single, Player, Vector3, Int32) Damages player with explosion force. Declaration public bool Damage(float amount, Player attacker, Vector3 force = default(Vector3), int armorPenetration = 0) Parameters Type Name Description System.Single amount The amount of damage. Player attacker The player which attacked UnityEngine.Vector3 force The force of explosion. System.Int32 armorPenetration The amount of armor penetration. Returns Type Description System.Boolean Whether or not damaging was successful. | Improve this Doc View Source Damage(Single, String, String) Damages player with custom reason. Declaration public bool Damage(float amount, string reason, string cassieAnnouncement = \"\") Parameters Type Name Description System.Single amount The amount of damage. System.String reason The reason of damage. System.String cassieAnnouncement The cassie announcement send after death. Returns Type Description System.Boolean Whether or not damaging was successful.."
  },
  "api/PluginAPI.Core.DataStorage.html": {
    "href": "api/PluginAPI.Core.DataStorage.html",
    "title": "Class DataStorage | Nw Plugin API",
    "keywords": "Class DataStorage Manages a player's temporary data storage. Inheritance System.Object DataStorage Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class DataStorage Fields | Improve this Doc View Source StoredData Stored temporary data. Declaration public readonly Dictionary<string, object> StoredData Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Methods | Improve this Doc View Source Add<T>(String, T) Adds new data name to storage. Declaration public bool Add<T>(string dataName, T data) where T : class, IComparable Parameters Type Name Description System.String dataName The data name. T data The object of data. Returns Type Description System.Boolean Whether or not data had not been previously stored. Type Parameters Name Description T The type of data. | Improve this Doc View Source Clear() Clears stored data. Declaration public void Clear() | Improve this Doc View Source Contains(String) Checks if data name is already stored. Declaration public bool Contains(string dataName) Parameters Type Name Description System.String dataName The data name. Returns Type Description System.Boolean Whether or not the data is exists. | Improve this Doc View Source Get<T>(String) Gets data from storage. Declaration public T Get<T>(string dataName) where T : class, IComparable Parameters Type Name Description System.String dataName The data name. Returns Type Description T The output value. Type Parameters Name Description T The type of data | Improve this Doc View Source Override<T>(String, T) Overrides existing data in storage. Declaration public void Override<T>(string dataName, T data) where T : class, IComparable Parameters Type Name Description System.String dataName The data name. T data The object of data. Type Parameters Name Description T The type of data. | Improve this Doc View Source Remove(String) Removes data from storage. Declaration public bool Remove(string dataName) Parameters Type Name Description System.String dataName The data name. Returns Type Description System.Boolean Whether or not data removal was successful | Improve this Doc View Source TryGet<T>(String, out T) Gets data from storage. Declaration public bool TryGet<T>(string dataName, out T data) where T : class, IComparable Parameters Type Name Description System.String dataName The data name. T data The output value. Returns Type Description System.Boolean Whether or not data was previously stored. Type Parameters Name Description T The type of data."
  },
  "api/PluginAPI.Core.Doors.FacilityBreakableDoor.html": {
    "href": "api/PluginAPI.Core.Doors.FacilityBreakableDoor.html",
    "title": "Class FacilityBreakableDoor | Nw Plugin API",
    "keywords": "Class FacilityBreakableDoor Represents a breakable door. Inheritance System.Object FacilityDoor FacilityBreakableDoor Inherited Members FacilityDoor.Room FacilityDoor.IsOpened FacilityDoor.IsLocked FacilityDoor.LockReason FacilityDoor.Permissions FacilityDoor.Bypass2176 FacilityDoor.Transform FacilityDoor.GameObject FacilityDoor.Position FacilityDoor.Rotation FacilityDoor.Lock(DoorLockReason, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Doors Assembly : PluginAPI.dll Syntax public class FacilityBreakableDoor : FacilityDoor Constructors | Improve this Doc View Source FacilityBreakableDoor(FacilityRoom, BreakableDoor) Initializes a new instance of the FacilityBreakableDoor class. Declaration public FacilityBreakableDoor(FacilityRoom room, BreakableDoor door) Parameters Type Name Description FacilityRoom room The room the door is in. Interactables.Interobjects.BreakableDoor door The base-game door object. Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly BreakableDoor OriginalObject Field Value Type Description Interactables.Interobjects.BreakableDoor Properties | Improve this Doc View Source Count Gets the total amount of breakable doors. Declaration public static int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Health Gets or sets door's health. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IgnoredDamageSources Gets or sets the door's ignored Interactables.Interobjects.DoorUtils.DoorDamageType . Declaration public DoorDamageType IgnoredDamageSources { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorDamageType | Improve this Doc View Source IsDestroyed Gets whether or not the door is destroyed. Declaration public bool IsDestroyed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a list of all the FacilityBreakableDoor s. Declaration public static List<FacilityBreakableDoor> List { get; } Property Value Type Description System.Collections.Generic.List < FacilityBreakableDoor > | Improve this Doc View Source MaxHealth Gets or sets the doors max health. Declaration public float MaxHealth { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Destroy() Destroys the door. Declaration public void Destroy()"
  },
  "api/PluginAPI.Core.Doors.FacilityDoor.html": {
    "href": "api/PluginAPI.Core.Doors.FacilityDoor.html",
    "title": "Class FacilityDoor | Nw Plugin API",
    "keywords": "Class FacilityDoor Represents a door. Inheritance System.Object FacilityDoor FacilityBreakableDoor FacilityGate Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Doors Assembly : PluginAPI.dll Syntax public class FacilityDoor Constructors | Improve this Doc View Source FacilityDoor(FacilityRoom, DoorVariant) Initializes a new instance of the FacilityDoor class. Declaration public FacilityDoor(FacilityRoom room, DoorVariant door) Parameters Type Name Description FacilityRoom room The room the door is in. Interactables.Interobjects.DoorUtils.DoorVariant door THe base-game door. Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly DoorVariant OriginalObject Field Value Type Description Interactables.Interobjects.DoorUtils.DoorVariant | Improve this Doc View Source Room The FacilityRoom the door is in. Declaration public readonly FacilityRoom Room Field Value Type Description FacilityRoom Properties | Improve this Doc View Source Bypass2176 Gets or sets whether or not the door will bypass 2176. Declaration public bool Bypass2176 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Count Gets the total amount of doors. Declaration public static int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source GameObject Gets the door's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsLocked Gets or sets whether or not the door is locked. Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOpened Gets or sets whether or not the door is open. Declaration public bool IsOpened { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a list of all the FacilityDoor s. Declaration public static List<FacilityDoor> List { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source LockReason Gets or sets the door's Interactables.Interobjects.DoorUtils.DoorLockReason Declaration public DoorLockReason LockReason { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorLockReason | Improve this Doc View Source Permissions Gets or sets the required Interactables.Interobjects.DoorUtils.KeycardPermissions . Declaration public KeycardPermissions Permissions { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.KeycardPermissions | Improve this Doc View Source Position Gets the door's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets the door's rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Transform Gets the door's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source Lock(DoorLockReason, Boolean) Locks the door. Declaration public void Lock(DoorLockReason reason, bool enabled) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorLockReason reason The reason. System.Boolean enabled Whether or not the door lock reason is new."
  },
  "api/PluginAPI.Core.Doors.FacilityGate.html": {
    "href": "api/PluginAPI.Core.Doors.FacilityGate.html",
    "title": "Class FacilityGate | Nw Plugin API",
    "keywords": "Class FacilityGate Represents a gate. Inheritance System.Object FacilityDoor FacilityGate Inherited Members FacilityDoor.Room FacilityDoor.IsOpened FacilityDoor.IsLocked FacilityDoor.LockReason FacilityDoor.Permissions FacilityDoor.Bypass2176 FacilityDoor.Transform FacilityDoor.GameObject FacilityDoor.Position FacilityDoor.Rotation FacilityDoor.Lock(DoorLockReason, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Doors Assembly : PluginAPI.dll Syntax public class FacilityGate : FacilityDoor Constructors | Improve this Doc View Source FacilityGate(FacilityRoom, PryableDoor) Initializes a new instance of the FacilityGate class. Declaration public FacilityGate(FacilityRoom room, PryableDoor gate) Parameters Type Name Description FacilityRoom room The room the gate is in. Interactables.Interobjects.PryableDoor gate The base-game object. Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly PryableDoor OriginalObject Field Value Type Description Interactables.Interobjects.PryableDoor Properties | Improve this Doc View Source Count Gets the total amount of gates. Declaration public static int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source List Gets a list of all the FacilityGate 's. Declaration public static List<FacilityGate> List { get; } Property Value Type Description System.Collections.Generic.List < FacilityGate > | Improve this Doc View Source PryPositions Gets the positions the door can be pryed open from. Declaration public Transform[] PryPositions { get; } Property Value Type Description UnityEngine.Transform []"
  },
  "api/PluginAPI.Core.Doors.html": {
    "href": "api/PluginAPI.Core.Doors.html",
    "title": "Namespace PluginAPI.Core.Doors | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Doors Classes FacilityBreakableDoor Represents a breakable door. FacilityDoor Represents a door. FacilityGate Represents a gate."
  },
  "api/PluginAPI.Core.EffectsManager.html": {
    "href": "api/PluginAPI.Core.EffectsManager.html",
    "title": "Class EffectsManager | Nw Plugin API",
    "keywords": "Class EffectsManager Manages a players effects. Inheritance System.Object EffectsManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class EffectsManager Constructors | Improve this Doc View Source EffectsManager(Player) Initializes a new instance of the EffectsManager class. Declaration public EffectsManager(Player plr) Parameters Type Name Description Player plr The player. Methods | Improve this Doc View Source ChangeState(String, Byte, Single, Boolean) Changes the state of a CustomPlayerEffects.StatusEffectBase on the Player . Declaration public StatusEffectBase ChangeState(string effectName, byte intensity, float duration = 0F, bool addDuration = false) Parameters Type Name Description System.String effectName The string that will be used to lookup the effect. System.Byte intensity The effect's new intensity. System.Single duration The effect's new duration. System.Boolean addDuration Whether the duration will be forced set or added to it's current one. Returns Type Description CustomPlayerEffects.StatusEffectBase Whether or not an effect was found. | Improve this Doc View Source ChangeState<T>(Byte, Single, Boolean) Changes the state of a CustomPlayerEffects.StatusEffectBase on the Player . Declaration public T ChangeState<T>(byte intensity, float duration = 0F, bool addDuration = false) where T : StatusEffectBase Parameters Type Name Description System.Byte intensity The effect's new intensity. System.Single duration The effect's new duration. System.Boolean addDuration Whether the duration will be forced set or added to it's current one. Returns Type Description T Whether or not an effect was found. Type Parameters Name Description T | Improve this Doc View Source DisableAllEffects() Disables all CustomPlayerEffects.StatusEffectBase . Declaration public void DisableAllEffects() | Improve this Doc View Source DisableEffect<T>() Disables a specific CustomPlayerEffects.StatusEffectBase on the Player . Declaration public T DisableEffect<T>() where T : StatusEffectBase Returns Type Description T The CustomPlayerEffects.StatusEffectBase instance of T , otherwise null . Type Parameters Name Description T The specified effect that will be looked for. | Improve this Doc View Source EnableEffect<T>(Single, Boolean) Enables a specific CustomPlayerEffects.StatusEffectBase on the Player . Declaration public T EnableEffect<T>(float duration = 0F, bool addDuration = false) where T : StatusEffectBase Parameters Type Name Description System.Single duration The effect's new duration, by default the effect is. System.Boolean addDuration Whether the duration will be forced set or added to it's current one. Returns Type Description T The CustomPlayerEffects.StatusEffectBase instance of T , otherwise null . Type Parameters Name Description T The specified effect that will be looked for. | Improve this Doc View Source GetEffect<T>() Gets a specific CustomPlayerEffects.StatusEffectBase . Declaration public T GetEffect<T>() where T : StatusEffectBase Returns Type Description T The CustomPlayerEffects.StatusEffectBase instance of T , otherwise null . Type Parameters Name Description T The specified effect that will be looked for. | Improve this Doc View Source TryGetEffect(String, out StatusEffectBase) Attempts to find a CustomPlayerEffects.StatusEffectBase based on the input string. Declaration public bool TryGetEffect(string effectName, out StatusEffectBase statusEffect) Parameters Type Name Description System.String effectName The string that will be used to lookup the effect. CustomPlayerEffects.StatusEffectBase statusEffect The returned player effect, if any was found. Otherwise it will be null. Returns Type Description System.Boolean Whether or not an effect was found. | Improve this Doc View Source TryGetEffect<T>(out T) Attempts to find a CustomPlayerEffects.StatusEffectBase and safely casts it. Declaration public bool TryGetEffect<T>(out T statusEffect) where T : StatusEffectBase Parameters Type Name Description T statusEffect The found player effect. Returns Type Description System.Boolean Whether or not a player effect was found. (And was cast successfully) Type Parameters Name Description T The specified effect that will be looked for."
  },
  "api/PluginAPI.Core.Extensions.html": {
    "href": "api/PluginAPI.Core.Extensions.html",
    "title": "Namespace PluginAPI.Core.Extensions | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Extensions Classes ReflectionExtensions Reflection-related extensions."
  },
  "api/PluginAPI.Core.Extensions.ReflectionExtensions.html": {
    "href": "api/PluginAPI.Core.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | Nw Plugin API",
    "keywords": "Class ReflectionExtensions Reflection-related extensions. Inheritance System.Object ReflectionExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Extensions Assembly : PluginAPI.dll Syntax public static class ReflectionExtensions Methods | Improve this Doc View Source IsValidEntrypoint(Type) Declaration public static bool IsValidEntrypoint(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean"
  },
  "api/PluginAPI.Core.Facility.html": {
    "href": "api/PluginAPI.Core.Facility.html",
    "title": "Class Facility | Nw Plugin API",
    "keywords": "Class Facility Represents the facility. Inheritance System.Object Facility Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class Facility Properties | Improve this Doc View Source Doors Gets all doors in facility. Declaration public static List<FacilityDoor> Doors { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source Rooms Gets all rooms in facility. Declaration public static List<FacilityRoom> Rooms { get; } Property Value Type Description System.Collections.Generic.List < FacilityRoom > Methods | Improve this Doc View Source TurnOffAllLights() Turns off all lights in facility. Declaration public static void TurnOffAllLights() | Improve this Doc View Source TurnOnAllLights() Turns on all lights in facility. Declaration public static void TurnOnAllLights()"
  },
  "api/PluginAPI.Core.Factories.Factory-1.html": {
    "href": "api/PluginAPI.Core.Factories.Factory-1.html",
    "title": "Class Factory<T> | Nw Plugin API",
    "keywords": "Class Factory<T> Factory for entities. Inheritance System.Object Factory<T> PlayerFactory Implements IEntityFactory <T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Factories Assembly : PluginAPI.dll Syntax public class Factory<T> : IEntityFactory<T> where T : IEntity Type Parameters Name Description T The entity type. Methods | Improve this Doc View Source Create(IGameComponent) Creates new entity. Declaration public virtual T Create(IGameComponent component) Parameters Type Name Description IGameComponent component The game component Returns Type Description T Entity. | Improve this Doc View Source Get() Gets all entities stored in factory. Declaration public IEnumerable<T> Get() Returns Type Description System.Collections.Generic.IEnumerable <T> List of all entities. | Improve this Doc View Source GetOrAdd(IGameComponent) Gets entity from factory. Declaration public T GetOrAdd(IGameComponent component) Parameters Type Name Description IGameComponent component The game component. Returns Type Description T Entity. Implements IEntityFactory<TEntity>"
  },
  "api/PluginAPI.Core.Factories.html": {
    "href": "api/PluginAPI.Core.Factories.html",
    "title": "Namespace PluginAPI.Core.Factories | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Factories Classes Factory<T> Factory for entities. PlayerFactory A factory to create IPlayer 's. Interfaces IEntityFactory<TEntity> Defines basic factory features."
  },
  "api/PluginAPI.Core.Factories.IEntityFactory-1.html": {
    "href": "api/PluginAPI.Core.Factories.IEntityFactory-1.html",
    "title": "Interface IEntityFactory<TEntity> | Nw Plugin API",
    "keywords": "Interface IEntityFactory<TEntity> Defines basic factory features. Namespace : PluginAPI.Core.Factories Assembly : PluginAPI.dll Syntax public interface IEntityFactory<TEntity> where TEntity : IEntity Type Parameters Name Description TEntity The entity to create. Remarks See https://www.tutorialspoint.com/design_pattern/factory_pattern.htm for more info Methods | Improve this Doc View Source Create(IGameComponent) Declaration TEntity Create(IGameComponent component) Parameters Type Name Description IGameComponent component Returns Type Description TEntity | Improve this Doc View Source Get() Declaration IEnumerable<TEntity> Get() Returns Type Description System.Collections.Generic.IEnumerable <TEntity> | Improve this Doc View Source GetOrAdd(IGameComponent) Declaration TEntity GetOrAdd(IGameComponent component) Parameters Type Name Description IGameComponent component Returns Type Description TEntity"
  },
  "api/PluginAPI.Core.Factories.PlayerFactory.html": {
    "href": "api/PluginAPI.Core.Factories.PlayerFactory.html",
    "title": "Class PlayerFactory | Nw Plugin API",
    "keywords": "Class PlayerFactory A factory to create IPlayer 's. Inheritance System.Object Factory < IPlayer > PlayerFactory Implements IEntityFactory < IPlayer > Inherited Members Factory<IPlayer>.Get() Factory<IPlayer>.GetOrAdd(IGameComponent) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Factories Assembly : PluginAPI.dll Syntax public class PlayerFactory : Factory<IPlayer>, IEntityFactory<IPlayer> Properties | Improve this Doc View Source BaseType Declaration public virtual Type BaseType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Create(IGameComponent) Creates a new IPlayer instance. Declaration public override IPlayer Create(IGameComponent component) Parameters Type Name Description IGameComponent component The IGameComponent . Returns Type Description IPlayer The created IPlayer . Overrides PluginAPI.Core.Factories.Factory<PluginAPI.Core.Interfaces.IPlayer>.Create(PluginAPI.Core.Interfaces.IGameComponent) Implements IEntityFactory<TEntity>"
  },
  "api/PluginAPI.Core.FactoryManager.html": {
    "href": "api/PluginAPI.Core.FactoryManager.html",
    "title": "Class FactoryManager | Nw Plugin API",
    "keywords": "Class FactoryManager Manages factories for plugin system. Inheritance System.Object FactoryManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class FactoryManager Methods | Improve this Doc View Source Init() Initializes the factory manager. Declaration public static void Init() | Improve this Doc View Source RegisterPlayerFactory(Object, PlayerFactory) Registers a new player factory. Declaration public static void RegisterPlayerFactory(object plugin, PlayerFactory factory) Parameters Type Name Description System.Object plugin The plugin object. PlayerFactory factory The factory. | Improve this Doc View Source RegisterPlayerFactory<T>(Object) Registers a new player factory. Declaration public static void RegisterPlayerFactory<T>(object plugin) where T : PlayerFactory Parameters Type Name Description System.Object plugin The plugin object. Type Parameters Name Description T"
  },
  "api/PluginAPI.Core.html": {
    "href": "api/PluginAPI.Core.html",
    "title": "Namespace PluginAPI.Core | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core Classes Cassie Represents the cassie system in-game. DamageManager Manages damage for a player. DataStorage Manages a player's temporary data storage. EffectsManager Manages a players effects. Facility Represents the facility. FactoryManager Manages factories for plugin system. Log Logger for plugin system. Map A set of tools to easily handle the in-game map. Player Represents a player connected to server. PlayerExtensions Player-related extensions. PlayerInfo Player info. PlayerSharedStorage Represents shared storage between all player classes. PluginHandler Handles a plugin. Respawn Handles respawning RoomLight Represents a room's light. Round Server Represents the server. Statistics Statistics of current server session. Statistics.FastestRound Represents a fastest round. Statistics.Peak Represents a player count peak. Statistics.Round Represents a round. Warhead Manages the warhead."
  },
  "api/PluginAPI.Core.Interfaces.html": {
    "href": "api/PluginAPI.Core.Interfaces.html",
    "title": "Namespace PluginAPI.Core.Interfaces | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Interfaces Interfaces IEntity Defines an entity. IGameComponent Defines a game component. IGameItem Defines a game item. IPlayer Defines a player."
  },
  "api/PluginAPI.Core.Interfaces.IEntity.html": {
    "href": "api/PluginAPI.Core.Interfaces.IEntity.html",
    "title": "Interface IEntity | Nw Plugin API",
    "keywords": "Interface IEntity Defines an entity. Namespace : PluginAPI.Core.Interfaces Assembly : PluginAPI.dll Syntax public interface IEntity"
  },
  "api/PluginAPI.Core.Interfaces.IGameComponent.html": {
    "href": "api/PluginAPI.Core.Interfaces.IGameComponent.html",
    "title": "Interface IGameComponent | Nw Plugin API",
    "keywords": "Interface IGameComponent Defines a game component. Namespace : PluginAPI.Core.Interfaces Assembly : PluginAPI.dll Syntax public interface IGameComponent"
  },
  "api/PluginAPI.Core.Interfaces.IGameItem.html": {
    "href": "api/PluginAPI.Core.Interfaces.IGameItem.html",
    "title": "Interface IGameItem | Nw Plugin API",
    "keywords": "Interface IGameItem Defines a game item. Namespace : PluginAPI.Core.Interfaces Assembly : PluginAPI.dll Syntax public interface IGameItem"
  },
  "api/PluginAPI.Core.Interfaces.IPlayer.html": {
    "href": "api/PluginAPI.Core.Interfaces.IPlayer.html",
    "title": "Interface IPlayer | Nw Plugin API",
    "keywords": "Interface IPlayer Defines a player. Namespace : PluginAPI.Core.Interfaces Assembly : PluginAPI.dll Syntax public interface IPlayer : IEntity Properties | Improve this Doc View Source GameObject Gets the player's UnityEngine.GameObject . Declaration GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsServer Gets if player is dedicated server. Declaration bool IsServer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ReferenceHub Gets the player's ReferenceHub . Declaration ReferenceHub ReferenceHub { get; } Property Value Type Description ReferenceHub | Improve this Doc View Source TemporaryData Gets player temporary data storage. Declaration DataStorage TemporaryData { get; } Property Value Type Description DataStorage Methods | Improve this Doc View Source GetComponent<T>(Boolean) Gets the UnityEngine.MonoBehaviour and caches it. Declaration T GetComponent<T>(bool globalSearch = false) where T : MonoBehaviour Parameters Type Name Description System.Boolean globalSearch Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source OnDestroy() Executed when player object is destroyed. Declaration void OnDestroy() | Improve this Doc View Source OnFixedUpdate() Executed with the frequency of the physics system. Unity's physics engine runs at 50hz by default. Declaration void OnFixedUpdate() | Improve this Doc View Source OnLateUpdate() Executed after all OnUpdate functions have been called. Declaration void OnLateUpdate() | Improve this Doc View Source OnStart() Executed when player object is created. Declaration void OnStart() | Improve this Doc View Source OnUpdate() Executed every frame. Declaration void OnUpdate() | Improve this Doc View Source TryGetComponent<T>(out T, Boolean) Gets the UnityEngine.MonoBehaviour and caches it. Declaration bool TryGetComponent<T>(out T component, bool globalSearch = false) where T : MonoBehaviour Parameters Type Name Description T component System.Boolean globalSearch Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/PluginAPI.Core.Items.html": {
    "href": "api/PluginAPI.Core.Items.html",
    "title": "Namespace PluginAPI.Core.Items | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Items Classes Item Represents an item. ItemPickup"
  },
  "api/PluginAPI.Core.Items.Item.html": {
    "href": "api/PluginAPI.Core.Items.Item.html",
    "title": "Class Item | Nw Plugin API",
    "keywords": "Class Item Represents an item. Inheritance System.Object Item Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Items Assembly : PluginAPI.dll Syntax public class Item Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly ItemBase OriginalObject Field Value Type Description InventorySystem.Items.ItemBase Properties | Improve this Doc View Source Category Gets the item's ItemCategory . Declaration public ItemCategory Category { get; } Property Value Type Description ItemCategory | Improve this Doc View Source CurrentOwner Gets the item's current owner. Declaration public Player CurrentOwner { get; } Property Value Type Description Player | Improve this Doc View Source GameObject Gets the item's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Position Gets the item's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets the items rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Serial Gets the item's serial. Declaration public ushort Serial { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ThrowSettings Gets the item's InventorySystem.Items.ItemThrowSettings . Declaration public ItemThrowSettings ThrowSettings { get; } Property Value Type Description InventorySystem.Items.ItemThrowSettings | Improve this Doc View Source TierFlags Gets the item's ItemTierFlags . Declaration public ItemTierFlags TierFlags { get; } Property Value Type Description ItemTierFlags | Improve this Doc View Source Transform Gets the item's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the item's ItemType . Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets the item's weight. Declaration public float Weight { get; } Property Value Type Description System.Single"
  },
  "api/PluginAPI.Core.Items.ItemPickup.html": {
    "href": "api/PluginAPI.Core.Items.ItemPickup.html",
    "title": "Class ItemPickup | Nw Plugin API",
    "keywords": "Class ItemPickup Inheritance System.Object ItemPickup Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Items Assembly : PluginAPI.dll Syntax public class ItemPickup Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly ItemPickupBase OriginalObject Field Value Type Description InventorySystem.Items.Pickups.ItemPickupBase Properties | Improve this Doc View Source GameObject Gets the pickup's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsLocked Gets or sets whether or not the pickup is locked. Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastOwner Gets the pickup's previous owner. Declaration public Player LastOwner { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets the pickup's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rigidbody Gets the pickup's UnityEngine.Rigidbody . Declaration public Rigidbody Rigidbody { get; } Property Value Type Description UnityEngine.Rigidbody | Improve this Doc View Source Rotation Gets the pickup's rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Serial Gets the pickup's serial. Declaration public ushort Serial { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Transform Gets the pickup's UnityEngine.Rigidbody . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the pickup's ItemType . Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets or sets the pickup's weight. Declaration public float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Create(ItemType, Vector3, Quaternion) Creates a new ItemPickup . Declaration public static ItemPickup Create(ItemType item, Vector3 position, Quaternion rotation) Parameters Type Name Description ItemType item The ItemType . UnityEngine.Vector3 position The position. UnityEngine.Quaternion rotation The rotation. Returns Type Description ItemPickup The created ItemPickup . | Improve this Doc View Source Destroy() Destroys the pickup. Declaration public void Destroy() | Improve this Doc View Source Spawn() Spawns the pickup. Declaration public void Spawn()"
  },
  "api/PluginAPI.Core.Log.html": {
    "href": "api/PluginAPI.Core.Log.html",
    "title": "Class Log | Nw Plugin API",
    "keywords": "Class Log Logger for plugin system. Inheritance System.Object Log Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Log Fields | Improve this Doc View Source DisableBetterColors Whether or not to disable custom colors from log messages. Declaration public static bool DisableBetterColors Field Value Type Description System.Boolean | Improve this Doc View Source UnityEditor Whether or not its running in the unity editor. Declaration public static bool UnityEditor Field Value Type Description System.Boolean Methods | Improve this Doc View Source Debug(String, String) Sends a debug message. Declaration public static void Debug(string message, string prefix = null) Parameters Type Name Description System.String message The message. System.String prefix The prefix of message. | Improve this Doc View Source Error(String, String) Sends a error message. Declaration public static void Error(string message, string prefix = null) Parameters Type Name Description System.String message The message. System.String prefix The prefix of message. | Improve this Doc View Source FormatText(String, String, Boolean) Converts a raw message with color tags to formatted message. Declaration public static string FormatText(string message, string defaultColor = null, bool unityRichText = false) Parameters Type Name Description System.String message The raw message. System.String defaultColor The default color of message. System.Boolean unityRichText If its unity richtext or ansi colors. Returns Type Description System.String Formatted message with colors. | Improve this Doc View Source Info(String, String) Sends a info message. Declaration public static void Info(string message, string prefix = null) Parameters Type Name Description System.String message The message. System.String prefix The prefix of message. | Improve this Doc View Source Raw(String, String) Sends a raw message. Declaration public static void Raw(string message, string prefix = null) Parameters Type Name Description System.String message The message. System.String prefix The prefix of message. | Improve this Doc View Source Warning(String, String) Sends a warning message. Declaration public static void Warning(string message, string prefix = null) Parameters Type Name Description System.String message The message. System.String prefix The prefix of message."
  },
  "api/PluginAPI.Core.Map.html": {
    "href": "api/PluginAPI.Core.Map.html",
    "title": "Class Map | Nw Plugin API",
    "keywords": "Class Map A set of tools to easily handle the in-game map. Inheritance System.Object Map Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Map Properties | Improve this Doc View Source Seed Gets the current seed of the map. Declaration public static int Seed { get; } Property Value Type Description System.Int32"
  },
  "api/PluginAPI.Core.Player.html": {
    "href": "api/PluginAPI.Core.Player.html",
    "title": "Class Player | Nw Plugin API",
    "keywords": "Class Player Represents a player connected to server. Inheritance System.Object Player Server Implements IPlayer IEntity Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class Player : IPlayer, IEntity Constructors | Improve this Doc View Source Player(IGameComponent) Initializes a new instance of the Player class. Declaration public Player(IGameComponent component) Parameters Type Name Description IGameComponent component The game component. Properties | Improve this Doc View Source ArtificialHealth Gets or sets the player's current artificial health; Declaration public float ArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Camera Gets the player's camera transform. Declaration public Transform Camera { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Connection Gets the player's network connection. Declaration public NetworkConnection Connection { get; } Property Value Type Description Mirror.NetworkConnection | Improve this Doc View Source Count Gets the amount of online players. Declaration public static int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CurrentItem Gets or sets the item in the player's hand, returns the default value if empty. Declaration public ItemBase CurrentItem { get; set; } Property Value Type Description InventorySystem.Items.ItemBase | Improve this Doc View Source CustomInfo Gets or sets the player's custom info. Declaration public string CustomInfo { get; set; } Property Value Type Description System.String | Improve this Doc View Source DamageManager The DamageManager . Declaration public DamageManager DamageManager { get; } Property Value Type Description DamageManager | Improve this Doc View Source DisplayNickname Gets or sets the player's display name. Declaration public string DisplayNickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source DoNotTrack Gets if the player has DoNotTrack enabled. Declaration public bool DoNotTrack { get; } Property Value Type Description System.Boolean | Improve this Doc View Source EffectsManager The EffectsManager . Declaration public EffectsManager EffectsManager { get; } Property Value Type Description EffectsManager | Improve this Doc View Source GameObject Gets the player's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Health Gets or sets the player's current health; Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IpAddress Gets the player's ip address. Declaration public string IpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source IsAlive Gets whether or not the player is alive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBypassEnabled Gets whether or not the player has bypass mode. Declaration public bool IsBypassEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGlobalModerator Gets whether or not the player is global moderator. Declaration public bool IsGlobalModerator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGodModeEnabled Gets whether or not the player has god mode enabled. Declaration public bool IsGodModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHuman Gets whether or not the player is human. Declaration public bool IsHuman { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIntercomMuted Gets whether or not the player is muted at intercom. Declaration public bool IsIntercomMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInventoryFull Gets whether or not the player's inventory is full. Declaration public bool IsInventoryFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets whether or not the player is muted. Declaration public bool IsMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNoclipEnabled Gets whether or not the player has noclip enabled. Declaration public bool IsNoclipEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNorthwoodStaff Gets whether or not the player is northwood staff. Declaration public bool IsNorthwoodStaff { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOverwatchEnabled Gets or sets whether ot not the player has overwatch enabled. Declaration public bool IsOverwatchEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReady Gets whether or not the player is properly connected to server. Declaration public bool IsReady { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsServer Gets whether or not the player is the dedicated server. Declaration public bool IsServer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsingVoiceChat Gets whether or not the player is using voicechat. Declaration public bool IsUsingVoiceChat { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxArtificalHealth Gets the player's current maximum artifical health. Declaration public float MaxArtificalHealth { get; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Gets the player's current maximum health; Declaration public float MaxHealth { get; } Property Value Type Description System.Single | Improve this Doc View Source NetworkId Gets the player's network id. Declaration public uint NetworkId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Nickname Gets the player's name. Declaration public string Nickname { get; } Property Value Type Description System.String | Improve this Doc View Source PlayerId Gets the player's unique id per round. Declaration public int PlayerId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PlayerInfo Player info displayed while looking at the player. Declaration public PlayerInfo PlayerInfo { get; } Property Value Type Description PlayerInfo | Improve this Doc View Source Position Gets or sets the player's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ReferenceHub Gets the player's ReferenceHub . Declaration public ReferenceHub ReferenceHub { get; } Property Value Type Description ReferenceHub | Improve this Doc View Source RemoteAdminAccess Gets whether or not the player has remoteadmin access. Declaration public bool RemoteAdminAccess { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Role Gets or sets the player's current role. Declaration public RoleTypeId Role { get; set; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Rotation Gets or sets player's rotation. Declaration public Vector3 Rotation { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source TemporaryData The DataStorage . Declaration public DataStorage TemporaryData { get; } Property Value Type Description DataStorage | Improve this Doc View Source UserId Gets the player's user id. Declaration public string UserId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddAmmo(ItemType, UInt16) Adds ammo of specific item type. Declaration public void AddAmmo(ItemType item, ushort amount) Parameters Type Name Description ItemType item The type of ammo. System.UInt16 amount The amount of ammo. | Improve this Doc View Source Ban(IPlayer, String, Int64) Bans the player from the server. Declaration public bool Ban(IPlayer issuer, string reason, long duration) Parameters Type Name Description IPlayer issuer The player which issued ban. System.String reason The reason of ban. System.Int64 duration The duration of ban in seconds. Returns Type Description System.Boolean If ban is successful. | Improve this Doc View Source Ban(String, Int64) Bans the player from the server. Declaration public bool Ban(string reason, long duration) Parameters Type Name Description System.String reason The reason of ban. System.Int64 duration The duration of ban in seconds. Returns Type Description System.Boolean If ban is successful. | Improve this Doc View Source ClearBroadcasts() Clears displayed broadcast(s). Declaration public void ClearBroadcasts() | Improve this Doc View Source Disconnect(String) Disconnects the player from the server. Declaration public void Disconnect(string reason = null) Parameters Type Name Description System.String reason The reason. | Improve this Doc View Source DropAmmo(ItemType, UInt16, Boolean) Drops ammo. Declaration public bool DropAmmo(ItemType item, ushort amount, bool checkMinimals = false) Parameters Type Name Description ItemType item The type of ammo. System.UInt16 amount The amount of ammo which will be dropped. System.Boolean checkMinimals Will prevent dropping small amounts of ammo. Returns Type Description System.Boolean Whether or not the player dropped the ammo successfully. | Improve this Doc View Source DropEverything() Drops all items including ammo. Declaration public void DropEverything() | Improve this Doc View Source Get<T>(NetworkIdentity) Gets the Player associated with the Mirror.NetworkIdentity . Declaration public static T Get<T>(NetworkIdentity netIdentity) where T : IPlayer Parameters Type Name Description Mirror.NetworkIdentity netIdentity Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(ReferenceHub) Gets the Player associated with the ReferenceHub . Declaration public static T Get<T>(ReferenceHub hub) where T : IPlayer Parameters Type Name Description ReferenceHub hub Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(Int32) Gets the Player by their player id. Declaration public static T Get<T>(int playerId) where T : IPlayer Parameters Type Name Description System.Int32 playerId Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(String) Gets the Player by their user id. Declaration public static T Get<T>(string userId) where T : IPlayer Parameters Type Name Description System.String userId Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(UInt32) Gets the Player by their network id. Declaration public static T Get<T>(uint networkId) where T : IPlayer Parameters Type Name Description System.UInt32 networkId Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(GameObject) Gets the Player associated with the UnityEngine.GameObject . Declaration public static T Get<T>(GameObject gameObject) where T : IPlayer Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetAmmo(ItemType) Gets ammo amount of specific ammo type. Declaration public ushort GetAmmo(ItemType item) Parameters Type Name Description ItemType item The type of ammo. Returns Type Description System.UInt16 The amount of ammo which the player has. | Improve this Doc View Source GetByName<T>(String) Gets the Player by their name. Declaration public static T GetByName<T>(string name) where T : IPlayer Parameters Type Name Description System.String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetComponent<T>(Boolean) Gets the UnityEngine.MonoBehaviour and caches it. Declaration public T GetComponent<T>(bool globalSearch = false) where T : MonoBehaviour Parameters Type Name Description System.Boolean globalSearch Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetPlayers<T>() Gets all players. Declaration public static List<T> GetPlayers<T>() where T : IPlayer Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source GetStatModule<T>() Gets the stats module. Declaration public T GetStatModule<T>() where T : StatBase Returns Type Description T The stat module. Type Parameters Name Description T The type of the stat module. | Improve this Doc View Source Heal(Single) Heals the player. Declaration public void Heal(float amount) Parameters Type Name Description System.Single amount The amount of health to heal. | Improve this Doc View Source IntercomMute(Boolean) Issue a mute to a player, preventing them from using intercom. Declaration public void IntercomMute(bool isTemporary = false) Parameters Type Name Description System.Boolean isTemporary | Improve this Doc View Source IntercomUnmute(Boolean) Revoke a player's mute, allowing them to use intercom again. Declaration public void IntercomUnmute(bool revokeMute) Parameters Type Name Description System.Boolean revokeMute Whether or not this player's UserId will be removed from the mute file. | Improve this Doc View Source Kick(IPlayer, String) Kicks the player from the server. Declaration public void Kick(IPlayer issuer, string reason) Parameters Type Name Description IPlayer issuer The player which issued kick. System.String reason The reason of kick. | Improve this Doc View Source Kick(String) Kicks the player from the server. Declaration public void Kick(string reason) Parameters Type Name Description System.String reason The reason of kick. | Improve this Doc View Source Mute(Boolean) Issue a mute to a player, prevents them from using voicechat. Declaration public void Mute(bool isTemporary = true) Parameters Type Name Description System.Boolean isTemporary | Improve this Doc View Source OnDestroy() Executed when player object is destroyed. Declaration public virtual void OnDestroy() | Improve this Doc View Source OnFixedUpdate() Executed with the frequency of the physics system. Unity's physics engine runs at 50hz by default. Declaration public virtual void OnFixedUpdate() | Improve this Doc View Source OnLateUpdate() Executed after all OnUpdate functions have been called. Declaration public virtual void OnLateUpdate() | Improve this Doc View Source OnStart() Executed when player object is created. Declaration public virtual void OnStart() | Improve this Doc View Source OnUpdate() Executed every frame. Declaration public virtual void OnUpdate() | Improve this Doc View Source ReceiveHint(String, HintEffect[], Single) Sends the player a hint text with effects. Declaration public void ReceiveHint(string text, HintEffect[] effects, float duration = 3F) Parameters Type Name Description System.String text The text which will be displayed. Hints.HintEffect [] effects The effects of text. System.Single duration The duration of which the text will be visible. | Improve this Doc View Source ReceiveHint(String, Single) Sends the player a hint text. Declaration public void ReceiveHint(string text, float duration = 3F) Parameters Type Name Description System.String text The text which will be displayed. System.Single duration The duration of which the text will be visible. | Improve this Doc View Source ReceiveHitMarker(Single) Sends the player a hit marker. Declaration public void ReceiveHitMarker(float size = 1F) Parameters Type Name Description System.Single size The size of hit marker. | Improve this Doc View Source Reconnect(Single, Boolean) Tells the player to reconnect to the server. Declaration public void Reconnect(float delay = 3F, bool isFastRestart = false) Parameters Type Name Description System.Single delay The delay when client will reconnect to server. System.Boolean isFastRestart Whether or not fast restart is enabled. | Improve this Doc View Source RedirectToServer(UInt16) Redirects player connection to a target server port. Declaration public void RedirectToServer(ushort port) Parameters Type Name Description System.UInt16 port The port of the target server. | Improve this Doc View Source SendBroadcast(String, UInt16, Broadcast.BroadcastFlags, Boolean) Sends a broadcast to the player. Declaration public void SendBroadcast(string message, ushort duration, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.String message The message to be broadcasted. System.UInt16 duration The broadcast duration. Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Whether or not it should clear previous broadcasts. | Improve this Doc View Source SendConsoleMessage(String, String) Sends a console message to the player's console. Declaration public void SendConsoleMessage(string message, string color = \"green\") Parameters Type Name Description System.String message The message to be sent. System.String color The message color. | Improve this Doc View Source SetAmmo(ItemType, UInt16) Sets the ammo amount of a specific ammo type. Declaration public void SetAmmo(ItemType item, ushort amount) Parameters Type Name Description ItemType item The type of ammo System.UInt16 amount The amount of ammo. | Improve this Doc View Source SetRole(RoleTypeId, RoleChangeReason) Sets the players role. Declaration public void SetRole(RoleTypeId newRole, RoleChangeReason reason = RoleChangeReason.RemoteAdmin) Parameters Type Name Description PlayerRoles.RoleTypeId newRole The PlayerRoles.RoleTypeId which will be set. PlayerRoles.RoleChangeReason reason The PlayerRoles.RoleChangeReason of role change. | Improve this Doc View Source TryGet<T>(NetworkIdentity, out T) Gets the Player associated with the Mirror.NetworkIdentity . Declaration public static bool TryGet<T>(NetworkIdentity netIdentity, out T player) where T : IPlayer Parameters Type Name Description Mirror.NetworkIdentity netIdentity T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(IGameComponent, out T) Gets the Player associated with the IGameComponent . Declaration public static bool TryGet<T>(IGameComponent component, out T player) where T : IPlayer Parameters Type Name Description IGameComponent component T player Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(ReferenceHub, out T) Gets the Player associated with the ReferenceHub . Declaration public static bool TryGet<T>(ReferenceHub hub, out T player) where T : IPlayer Parameters Type Name Description ReferenceHub hub T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(Int32, out T) Gets the Player by their player id. Declaration public static bool TryGet<T>(int playerId, out T player) where T : IPlayer Parameters Type Name Description System.Int32 playerId T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(String, out T) Gets the Player by their user id. Declaration public static bool TryGet<T>(string userId, out T player) where T : IPlayer Parameters Type Name Description System.String userId T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(UInt32, out T) Gets the Player by their network id. Declaration public static bool TryGet<T>(uint networkId, out T player) where T : IPlayer Parameters Type Name Description System.UInt32 networkId T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGet<T>(GameObject, out T) Gets the Player associated with the UnityEngine.GameObject . Declaration public static bool TryGet<T>(GameObject gameObject, out T player) where T : IPlayer Parameters Type Name Description UnityEngine.GameObject gameObject T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGetByName<T>(String, out T) Gets the Player by their name. Declaration public static bool TryGetByName<T>(string name, out T player) where T : IPlayer Parameters Type Name Description System.String name T player Returns Type Description System.Boolean Whether or not a player was found. Type Parameters Name Description T | Improve this Doc View Source TryGetComponent<T>(out T, Boolean) Gets the UnityEngine.MonoBehaviour and caches it. Declaration public bool TryGetComponent<T>(out T component, bool globalSearch = false) where T : MonoBehaviour Parameters Type Name Description T component System.Boolean globalSearch Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source Unmute(Boolean) Revoke a player's mute, allowing them to use voicechat again. Declaration public void Unmute(bool revokeMute) Parameters Type Name Description System.Boolean revokeMute If set to true, this player's UserId will be removed from the mute file. Implements IPlayer IEntity Extension Methods PlayerExtensions.GetAmmoLimit(Player, ItemType) PlayerExtensions.GetCategoryLimit(Player, ItemCategory)"
  },
  "api/PluginAPI.Core.PlayerExtensions.html": {
    "href": "api/PluginAPI.Core.PlayerExtensions.html",
    "title": "Class PlayerExtensions | Nw Plugin API",
    "keywords": "Class PlayerExtensions Player-related extensions. Inheritance System.Object PlayerExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class PlayerExtensions Methods | Improve this Doc View Source GetAmmoLimit(Player, ItemType) Gets ammo limit for certain item type. Declaration public static int GetAmmoLimit(this Player plr, ItemType type) Parameters Type Name Description Player plr ItemType type The type of item. Returns Type Description System.Int32 Maximum amount of ammo which player can have. | Improve this Doc View Source GetCategoryLimit(Player, ItemCategory) Gets maximum amount of items which certain category can give including armor west on player. Declaration public static int GetCategoryLimit(this Player plr, ItemCategory category) Parameters Type Name Description Player plr ItemCategory category The item category. Returns Type Description System.Int32 Maximum amount of items which player can hold."
  },
  "api/PluginAPI.Core.PlayerInfo.html": {
    "href": "api/PluginAPI.Core.PlayerInfo.html",
    "title": "Class PlayerInfo | Nw Plugin API",
    "keywords": "Class PlayerInfo Player info. Inheritance System.Object PlayerInfo Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class PlayerInfo Constructors | Improve this Doc View Source PlayerInfo(Player) Initializes a new instance of the PlayerInfo class. Declaration public PlayerInfo(Player plr) Parameters Type Name Description Player plr The player. Properties | Improve this Doc View Source IsBadgeHidden Gets or sets whether or not the player's badge is hidden in their player info. Declaration public bool IsBadgeHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCustomInfoHidden Gets or sets whether or not the player's custom info is hidden in their player info. Declaration public bool IsCustomInfoHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNicknameHidden Gets or sets whether or not the player's nickname is hidden in their player info. Declaration public bool IsNicknameHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPowerStatusHidden Gets or sets whether or not the player's power status is hidden in their player info. Declaration public bool IsPowerStatusHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoleHidden Gets or sets whether or not the player's role is hidden in their player info. Declaration public bool IsRoleHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUnitNameHidden Gets or sets whether or not the player's unit name is hidden in their player info. Declaration public bool IsUnitNameHidden { get; set; } Property Value Type Description System.Boolean"
  },
  "api/PluginAPI.Core.PlayerSharedStorage.html": {
    "href": "api/PluginAPI.Core.PlayerSharedStorage.html",
    "title": "Class PlayerSharedStorage | Nw Plugin API",
    "keywords": "Class PlayerSharedStorage Represents shared storage between all player classes. Inheritance System.Object PlayerSharedStorage Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class PlayerSharedStorage Properties | Improve this Doc View Source CanReceiveDamageFromPlayers Gets or sets whether or not player can receive damage from players. Declaration public bool CanReceiveDamageFromPlayers { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DamageBlacklist Gets a list of players which can't damage this player. Declaration public List<Player> DamageBlacklist { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source DamageWhitelist Gets a list of players which can damage this player. Declaration public List<Player> DamageWhitelist { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source StoredComponents Gets stored components. Declaration public Dictionary<Type, MonoBehaviour> StoredComponents { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , UnityEngine.MonoBehaviour >"
  },
  "api/PluginAPI.Core.PluginHandler.html": {
    "href": "api/PluginAPI.Core.PluginHandler.html",
    "title": "Class PluginHandler | Nw Plugin API",
    "keywords": "Class PluginHandler Handles a plugin. Inheritance System.Object PluginHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class PluginHandler Constructors | Improve this Doc View Source PluginHandler(PluginDirectory, Type, Type[]) Initializes a new instance of the PluginHandler class. Declaration public PluginHandler(PluginDirectory directory, Type entryType, Type[] types) Parameters Type Name Description PluginDirectory directory The directory of plugin. System.Type entryType The type of plugin. System.Type [] types The all types in plugin. Properties | Improve this Doc View Source PluginAuthor Gets the author of the plugin. Declaration public string PluginAuthor { get; } Property Value Type Description System.String | Improve this Doc View Source PluginDescription Gets the description of the plugin. Declaration public string PluginDescription { get; } Property Value Type Description System.String | Improve this Doc View Source PluginName Gets the name of the plugin. Declaration public string PluginName { get; } Property Value Type Description System.String | Improve this Doc View Source PluginVersion Gets the version of the plugin. Declaration public string PluginVersion { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Load() Loads the plugin. Declaration public void Load() | Improve this Doc View Source Unload() Unloads the plugin. Declaration public void Unload()"
  },
  "api/PluginAPI.Core.Respawn.html": {
    "href": "api/PluginAPI.Core.Respawn.html",
    "title": "Class Respawn | Nw Plugin API",
    "keywords": "Class Respawn Handles respawning Inheritance System.Object Respawn Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Respawn Properties | Improve this Doc View Source ChaosTickets Gets the amount of chaos tickets left. Declaration public static float ChaosTickets { get; } Property Value Type Description System.Single | Improve this Doc View Source NextKnownTeam Gets the next team which will be spawned. Declaration public static SpawnableTeamType NextKnownTeam { get; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source NtfTickets Gets the amount of NTF tickets left. Declaration public static float NtfTickets { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source AddTickets(SpawnableTeamType, Single) Adds tickets to a specific team. Declaration public static void AddTickets(SpawnableTeamType team, float amount) Parameters Type Name Description Respawning.SpawnableTeamType team The team to add tickets to. System.Single amount The amount of tickets to add. | Improve this Doc View Source Spawn(SpawnableTeamType, Boolean) Spawns a specific team. Declaration public static void Spawn(SpawnableTeamType team, bool playEffects = false) Parameters Type Name Description Respawning.SpawnableTeamType team The team to spawn. System.Boolean playEffects Plays spawn effects."
  },
  "api/PluginAPI.Core.RoomLight.html": {
    "href": "api/PluginAPI.Core.RoomLight.html",
    "title": "Class RoomLight | Nw Plugin API",
    "keywords": "Class RoomLight Represents a room's light. Inheritance System.Object RoomLight Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class RoomLight Constructors | Improve this Doc View Source RoomLight(FlickerableLightController) Initializes a new instance of the RoomLight class. Declaration public RoomLight(FlickerableLightController lightController) Parameters Type Name Description FlickerableLightController lightController The light controller for room. Properties | Improve this Doc View Source DefaultColor Gets the default color of lights. Declaration public Color DefaultColor { get; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source IsEnabled Gets or sets whether or not the light in room is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LightColor Gets or sets the color of the lights. Declaration public Color LightColor { get; set; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source LightIntensity Gets or sets lightning intensity in room. Declaration public float LightIntensity { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source FlickerLights(Single) Flickers the lights. Declaration public void FlickerLights(float duration) Parameters Type Name Description System.Single duration The durtaion of flicker."
  },
  "api/PluginAPI.Core.Round.html": {
    "href": "api/PluginAPI.Core.Round.html",
    "title": "Class Round | Nw Plugin API",
    "keywords": "Class Round Inheritance System.Object Round Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Round Properties | Improve this Doc View Source IsLobbyLocked Gets or sets a value indicating whether the lobby is locked or not. Declaration public static bool IsLobbyLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether the round is locked or not. Declaration public static bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoundStarted Gets a value indicating whether the round is started or not. Declaration public static bool IsRoundStarted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source End() Ends current round. Declaration public static bool End() Returns Type Description System.Boolean A System.Boolean describing whether or not the round was successfully ended. | Improve this Doc View Source Restart(Boolean, Boolean, ServerStatic.NextRoundAction) Restarts round. Declaration public static void Restart(bool fastRestart = true, bool overrideRestartAction = false, ServerStatic.NextRoundAction restartAction = ServerStatic.NextRoundAction.Restart) Parameters Type Name Description System.Boolean fastRestart Whether or not it fast restart is enabled. System.Boolean overrideRestartAction Overrides stop next round action. ServerStatic.NextRoundAction restartAction The restart action. | Improve this Doc View Source RestartSilently() Restarts the round silently. Declaration public static void RestartSilently() | Improve this Doc View Source Start() Start the round. Declaration public static void Start()"
  },
  "api/PluginAPI.Core.Server.html": {
    "href": "api/PluginAPI.Core.Server.html",
    "title": "Class Server | Nw Plugin API",
    "keywords": "Class Server Represents the server. Inheritance System.Object Player Server Implements IPlayer IEntity Inherited Members Player.Count Player.GetPlayers<T>() Player.TryGet<T>(IGameComponent, T) Player.Get<T>(GameObject) Player.TryGet<T>(GameObject, T) Player.Get<T>(ReferenceHub) Player.TryGet<T>(ReferenceHub, T) Player.Get<T>(NetworkIdentity) Player.TryGet<T>(NetworkIdentity, T) Player.GetByName<T>(String) Player.TryGetByName<T>(String, T) Player.Get<T>(Int32) Player.TryGet<T>(Int32, T) Player.Get<T>(String) Player.TryGet<T>(String, T) Player.Get<T>(UInt32) Player.TryGet<T>(UInt32, T) Player.ReferenceHub Player.GameObject Player.NetworkId Player.PlayerId Player.Nickname Player.DisplayNickname Player.UserId Player.IpAddress Player.Role Player.CustomInfo Player.Health Player.MaxHealth Player.ArtificialHealth Player.MaxArtificalHealth Player.RemoteAdminAccess Player.DoNotTrack Player.IsOverwatchEnabled Player.PlayerInfo Player.CurrentItem Player.IsMuted Player.IsIntercomMuted Player.IsUsingVoiceChat Player.IsGlobalModerator Player.IsNorthwoodStaff Player.IsBypassEnabled Player.IsGodModeEnabled Player.IsNoclipEnabled Player.IsInventoryFull Player.IsHuman Player.IsAlive Player.IsReady Player.IsServer Player.Connection Player.Camera Player.TemporaryData Player.EffectsManager Player.DamageManager Player.Position Player.Rotation Player.SendConsoleMessage(String, String) Player.Ban(IPlayer, String, Int64) Player.Ban(String, Int64) Player.Kick(IPlayer, String) Player.Kick(String) Player.Mute(Boolean) Player.Unmute(Boolean) Player.IntercomMute(Boolean) Player.IntercomUnmute(Boolean) Player.AddAmmo(ItemType, UInt16) Player.SetAmmo(ItemType, UInt16) Player.GetAmmo(ItemType) Player.DropAmmo(ItemType, UInt16, Boolean) Player.DropEverything() Player.Heal(Single) Player.SetRole(RoleTypeId, RoleChangeReason) Player.Disconnect(String) Player.ReceiveHint(String, Single) Player.ReceiveHint(String, HintEffect[], Single) Player.ReceiveHitMarker(Single) Player.GetStatModule<T>() Player.RedirectToServer(UInt16) Player.Reconnect(Single, Boolean) Player.OnStart() Player.OnDestroy() Player.OnUpdate() Player.OnLateUpdate() Player.OnFixedUpdate() Player.GetComponent<T>(Boolean) Player.TryGetComponent<T>(T, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class Server : Player, IPlayer, IEntity Constructors | Improve this Doc View Source Server(IGameComponent) Initializes a new instance of the Server class. Declaration public Server(IGameComponent hub) Parameters Type Name Description IGameComponent hub The hub of server. Properties | Improve this Doc View Source FriendlyFire Gets or sets a value indicating whether or not server has enabled friendly fire. Declaration public static bool FriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Instance The Server instance. Declaration public static Server Instance { get; } Property Value Type Description Server | Improve this Doc View Source MaxPlayers Gets or sets the maximum amount of players online at the same time. Declaration public static int MaxPlayers { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Port Gets the port of the server. Declaration public static ushort Port { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ServerIpAddress Gets the Ip address of the server. Declaration public static string ServerIpAddress { get; } Property Value Type Description System.String Methods | Improve this Doc View Source BanPlayer(Player, IPlayer, String, Int64) Bans a player from the server. Declaration public static bool BanPlayer(Player player, IPlayer issuer, string reason, long duration) Parameters Type Name Description Player player The player which will be banned. IPlayer issuer The player who issued the ban. System.String reason The reason of ban. System.Int64 duration The duration of the ban in seconds. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source BanPlayer(Player, String, Int64) Bans a player from the server. Declaration public static bool BanPlayer(Player player, string reason, long duration) Parameters Type Name Description Player player The target player which will be banned. System.String reason The reason of the ban. System.Int64 duration The duration of the ban in seconds. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source BanPlayerByIpAddress(String, Player, String, Int64, String) Bans a player from the server. Declaration public static bool BanPlayerByIpAddress(string ipAddress, Player issuer, string reason, long duration, string bannedPlayerNickname = \"UnknownName\") Parameters Type Name Description System.String ipAddress The ip address of the player which will be banned. Player issuer The issuer of the ban. System.String reason The ban reason. System.Int64 duration The duration of the ban. System.String bannedPlayerNickname The nickname of the banned player. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source BanPlayerByIpAddress(String, String, Int64, String) Bans a player from the server. Declaration public static bool BanPlayerByIpAddress(string ipAddress, string reason, long duration, string bannedPlayerNickname = \"UnknownName\") Parameters Type Name Description System.String ipAddress The ip address of the player which will be banned. System.String reason The ban reason. System.Int64 duration The duration of the ban. System.String bannedPlayerNickname The nickname of the the banned player. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source BanPlayerByUserId(String, Player, String, Int64, String) Bans a player from the server. Declaration public static bool BanPlayerByUserId(string userId, Player issuer, string reason, long duration, string bannedPlayerNickname = \"UnknownName\") Parameters Type Name Description System.String userId The userid of the player which will be banned. Player issuer The issuer of the ban. System.String reason The ban reason. System.Int64 duration The duration of the ban. System.String bannedPlayerNickname The nickname of the banned player. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source BanPlayerByUserId(String, String, Int64, String) Bans a player from the server. Declaration public static bool BanPlayerByUserId(string userId, string reason, long duration, string bannedPlayerNickname = \"UnknownName\") Parameters Type Name Description System.String userId The userid of player which will be banned. System.String reason The ban reason. System.Int64 duration The duration of the ban. System.String bannedPlayerNickname The nickname of the banned player. Returns Type Description System.Boolean Whether or not the ban was successful. | Improve this Doc View Source ClearBroadcasts() Clears displayed broadcast. Declaration public static void ClearBroadcasts() | Improve this Doc View Source GetAllPlayersBanned() Gets all banned players. Declaration public static BanDetails[] GetAllPlayersBanned() Returns Type Description BanDetails [] List of all banned players. | Improve this Doc View Source GetAllPlayersBanned(BanHandler.BanType) Gets all banned players. Declaration public static BanDetails[] GetAllPlayersBanned(BanHandler.BanType banType) Parameters Type Name Description BanHandler.BanType banType The type of ban. Returns Type Description BanDetails [] List of specified ban types. | Improve this Doc View Source IsPlayerBanned(String) Checks whether or not a player is banned. Declaration public static bool IsPlayerBanned(string value) Parameters Type Name Description System.String value The userid or ip of the player. Returns Type Description System.Boolean Whether or not the player is banned. | Improve this Doc View Source KickPlayer(Player, IPlayer, String) Kicks a player from the server. Declaration public static void KickPlayer(Player player, IPlayer issuer, string reason) Parameters Type Name Description Player player The player which will be kicked. IPlayer issuer The player who issued kick. System.String reason The reason of the kick. | Improve this Doc View Source KickPlayer(Player, String) Kicks a player from the server. Declaration public static void KickPlayer(Player player, string reason) Parameters Type Name Description Player player The player which will be kicked. System.String reason The reason of the kick. | Improve this Doc View Source Restart() Restarts the server and reconnects all players. Declaration public static void Restart() | Improve this Doc View Source Restart(UInt16) Restarts the server and reconnects all players to target server port. Declaration public static void Restart(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort | Improve this Doc View Source RunCommand(String, CommandSender) Run command as server. Declaration public static string RunCommand(string command, CommandSender sender = null) Parameters Type Name Description System.String command The command name. CommandSender sender The CommandSender running the command. Returns Type Description System.String | Improve this Doc View Source SendBroadcast(String, UInt16, Broadcast.BroadcastFlags, Boolean) Shows a broadcast to the player. Declaration public static void SendBroadcast(string message, ushort duration, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.String message The message to be broadcasted. System.UInt16 duration The broadcast duration. Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Clears previous displayed broadcast. | Improve this Doc View Source Shutdown() Shutdowns the server and disconnects all players. Declaration public static void Shutdown() | Improve this Doc View Source Shutdown(UInt16) Shutdowns the server and reconnects all players to target server port. Declaration public static void Shutdown(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort | Improve this Doc View Source UnbanPlayerByIpAddress(String) Unbans a player from the server. Declaration public static bool UnbanPlayerByIpAddress(string ipAddress) Parameters Type Name Description System.String ipAddress The ip address of the player. Returns Type Description System.Boolean Whether or not the unban was successful. | Improve this Doc View Source UnbanPlayerByUserId(String) Unbans a player from the server. Declaration public static bool UnbanPlayerByUserId(string userId) Parameters Type Name Description System.String userId The userid of the player to unban. Returns Type Description System.Boolean Whether or not the unban was successful. Implements IPlayer IEntity Extension Methods PlayerExtensions.GetAmmoLimit(Player, ItemType) PlayerExtensions.GetCategoryLimit(Player, ItemCategory)"
  },
  "api/PluginAPI.Core.Statistics.FastestRound.html": {
    "href": "api/PluginAPI.Core.Statistics.FastestRound.html",
    "title": "Class Statistics.FastestRound | Nw Plugin API",
    "keywords": "Class Statistics.FastestRound Represents a fastest round. Inheritance System.Object Statistics.FastestRound Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class FastestRound Properties | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source LeadingTeam Declaration public RoundSummary.LeadingTeam LeadingTeam { get; } Property Value Type Description RoundSummary.LeadingTeam | Improve this Doc View Source Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description System.DateTime"
  },
  "api/PluginAPI.Core.Statistics.html": {
    "href": "api/PluginAPI.Core.Statistics.html",
    "title": "Class Statistics | Nw Plugin API",
    "keywords": "Class Statistics Statistics of current server session. Inheritance System.Object Statistics Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Statistics Fields | Improve this Doc View Source CurrentRound Statistics related to current round. Declaration public static readonly Statistics.Round CurrentRound Field Value Type Description Statistics.Round | Improve this Doc View Source FastestEndedRound Information about fastest round. Declaration public static Statistics.FastestRound FastestEndedRound Field Value Type Description Statistics.FastestRound | Improve this Doc View Source PeakPlayers Information about timestamp and amount of peak players. Declaration public static Statistics.Peak PeakPlayers Field Value Type Description Statistics.Peak Properties | Improve this Doc View Source TotalConnectedPlayers Gets the total amount of time a player connected to the server successfully. Declaration public static int TotalConnectedPlayers { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalRejectedConnections Gets the total amount of time a player's connecting to the server was rejected. Declaration public static int TotalRejectedConnections { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalRoundrestarts The amount of times the server restarted round in this session. Declaration public static int TotalRoundrestarts { get; } Property Value Type Description System.Int32"
  },
  "api/PluginAPI.Core.Statistics.Peak.html": {
    "href": "api/PluginAPI.Core.Statistics.Peak.html",
    "title": "Class Statistics.Peak | Nw Plugin API",
    "keywords": "Class Statistics.Peak Represents a player count peak. Inheritance System.Object Statistics.Peak Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class Peak Properties | Improve this Doc View Source Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description System.DateTime | Improve this Doc View Source Total Declaration public int Total { get; } Property Value Type Description System.Int32"
  },
  "api/PluginAPI.Core.Statistics.Round.html": {
    "href": "api/PluginAPI.Core.Statistics.Round.html",
    "title": "Class Statistics.Round | Nw Plugin API",
    "keywords": "Class Statistics.Round Represents a round. Inheritance System.Object Statistics.Round Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public class Round Properties | Improve this Doc View Source Duration Gets the duration of the current round. Declaration public static TimeSpan Duration { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source ScpsAlive Gets the total amount of SCPs alive. Declaration public int ScpsAlive { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartTimestamp Gets the current round's starting timestamp. Declaration public DateTime StartTimestamp { get; } Property Value Type Description System.DateTime | Improve this Doc View Source TotalEscapedClassD Gets the total amount Class-Ds who have escaped. Declaration public int TotalEscapedClassD { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalEscapedScientists Gets the total amount Scientists who have escaped. Declaration public int TotalEscapedScientists { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalKilledPlayers Gets the total amount of players deaths. Declaration public int TotalKilledPlayers { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalScp0492Made Gets the total amount Scp049-2s created. Declaration public int TotalScp0492Made { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalScpKills Gets the total amount of kills made by SCPs. Declaration public int TotalScpKills { get; } Property Value Type Description System.Int32"
  },
  "api/PluginAPI.Core.Warhead.html": {
    "href": "api/PluginAPI.Core.Warhead.html",
    "title": "Class Warhead | Nw Plugin API",
    "keywords": "Class Warhead Manages the warhead. Inheritance System.Object Warhead Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core Assembly : PluginAPI.dll Syntax public static class Warhead Properties | Improve this Doc View Source DetonationTime Gets or sets a time of detonation. Declaration public static float DetonationTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsDetonated Gets a value indicating whether or not the warhead is detonated. Declaration public static bool IsDetonated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDetonationInProgress Gets a value indicating whether or not the warhead detonation is in progress. Declaration public static bool IsDetonationInProgress { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LeverStatus Gets or sets a value indicating whether or not the lever in the warhead room is enabled. Declaration public static bool LeverStatus { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WarheadUnlocked Gets or sets a value indicating whether or not the button in outside nuke panel is unlocked. Declaration public static bool WarheadUnlocked { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Detonate() Detonate warhead. Declaration public static void Detonate() | Improve this Doc View Source Shake() Show the shake effect to all players. Declaration public static void Shake() | Improve this Doc View Source Start(Boolean, Boolean) Starts the detonation countdown. Declaration public static void Start(bool isAutomatic = true, bool suppressSubtitles = false) Parameters Type Name Description System.Boolean isAutomatic Determines whether the detonation is automatic. System.Boolean suppressSubtitles Determines whether subtitles should be suppressed. | Improve this Doc View Source Stop() Stops the detonation countdown. Declaration public static void Stop()"
  },
  "api/PluginAPI.Core.Zones.Entrance.EzRoom.html": {
    "href": "api/PluginAPI.Core.Zones.Entrance.EzRoom.html",
    "title": "Class EzRoom | Nw Plugin API",
    "keywords": "Class EzRoom Represents an room inside the entrance zone. Inheritance System.Object FacilityRoom EzRoom Inherited Members FacilityRoom.Zone FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Entrance Assembly : PluginAPI.dll Syntax public class EzRoom : FacilityRoom Constructors | Improve this Doc View Source EzRoom(EntranceZone, RoomIdentifier) Constructor for entrance zone room. Declaration public EzRoom(EntranceZone zone, RoomIdentifier room) Parameters Type Name Description EntranceZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier."
  },
  "api/PluginAPI.Core.Zones.Entrance.html": {
    "href": "api/PluginAPI.Core.Zones.Entrance.html",
    "title": "Namespace PluginAPI.Core.Zones.Entrance | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Entrance Classes EzRoom Represents an room inside the entrance zone."
  },
  "api/PluginAPI.Core.Zones.EntranceZone.html": {
    "href": "api/PluginAPI.Core.Zones.EntranceZone.html",
    "title": "Class EntranceZone | Nw Plugin API",
    "keywords": "Class EntranceZone Represents the entrance zone. Inheritance System.Object FacilityZone EntranceZone Inherited Members FacilityZone.GetRooms() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class EntranceZone : FacilityZone Constructors | Improve this Doc View Source EntranceZone() Initializes a new instance of the EntranceZone class. Declaration public EntranceZone() Properties | Improve this Doc View Source Doors Gets all doors in entrance zone. Declaration public static List<FacilityDoor> Doors { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source Rooms Gets all rooms in entrance zone. Declaration public static List<EzRoom> Rooms { get; } Property Value Type Description System.Collections.Generic.List < EzRoom > | Improve this Doc View Source ZoneType Gets the zone type. Declaration public override FacilityZone ZoneType { get; } Property Value Type Description MapGeneration.FacilityZone Overrides FacilityZone.ZoneType Methods | Improve this Doc View Source GetRooms<T>() Gets all rooms of specific type. Declaration public override List<T> GetRooms<T>() where T : FacilityRoom Returns Type Description System.Collections.Generic.List <T> List of all rooms. Type Parameters Name Description T The tyep of rooms. Overrides FacilityZone.GetRooms<T>() | Improve this Doc View Source TryGetRoom(RoomIdentifier, out FacilityRoom) Gets surface room from room identifier. Declaration public override bool TryGetRoom(RoomIdentifier roomIdentity, out FacilityRoom room) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentity The room identifier. FacilityRoom room The facility room. Returns Type Description System.Boolean Whether or not the room was found. Overrides FacilityZone.TryGetRoom(RoomIdentifier, out FacilityRoom)"
  },
  "api/PluginAPI.Core.Zones.FacilityRoom.html": {
    "href": "api/PluginAPI.Core.Zones.FacilityRoom.html",
    "title": "Class FacilityRoom | Nw Plugin API",
    "keywords": "Class FacilityRoom Represents a room. Inheritance System.Object FacilityRoom EzRoom HczRoom LczRoom PocketDimension Surface Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class FacilityRoom Constructors | Improve this Doc View Source FacilityRoom(FacilityZone, RoomIdentifier) Initializes a new instance of the FacilityRoom class. Declaration public FacilityRoom(FacilityZone zone, RoomIdentifier room) Parameters Type Name Description FacilityZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Fields | Improve this Doc View Source Identifier Gets the room identifier. Declaration public readonly RoomIdentifier Identifier Field Value Type Description MapGeneration.RoomIdentifier | Improve this Doc View Source Lights Gets the lights controller. Declaration public readonly RoomLight Lights Field Value Type Description RoomLight | Improve this Doc View Source Zone Gets the zone type. Declaration public readonly FacilityZone Zone Field Value Type Description FacilityZone Properties | Improve this Doc View Source GameObject Gets room's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Position Gets room's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets room's rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Transform Gets the room's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source GetComponent<T>(Boolean, Boolean) Declaration public T GetComponent<T>(bool globalSearch = false, bool childSearch = false) where T : MonoBehaviour Parameters Type Name Description System.Boolean globalSearch System.Boolean childSearch Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source TryGetComponent<T>(out T, Boolean, Boolean) Declaration public bool TryGetComponent<T>(out T component, bool globalSearch = false, bool childSearch = false) where T : MonoBehaviour Parameters Type Name Description T component System.Boolean globalSearch System.Boolean childSearch Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/PluginAPI.Core.Zones.FacilityZone.html": {
    "href": "api/PluginAPI.Core.Zones.FacilityZone.html",
    "title": "Class FacilityZone | Nw Plugin API",
    "keywords": "Class FacilityZone Represents a zone. Inheritance System.Object FacilityZone EntranceZone HeavyZone LightZone SurfaceZone UnknownZone Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class FacilityZone Properties | Improve this Doc View Source ZoneType Gets the zone type. Declaration public virtual FacilityZone ZoneType { get; } Property Value Type Description MapGeneration.FacilityZone Methods | Improve this Doc View Source GetRooms() Gets all rooms. Declaration public List<FacilityRoom> GetRooms() Returns Type Description System.Collections.Generic.List < FacilityRoom > List of all rooms. | Improve this Doc View Source GetRooms<T>() Gets all rooms of specific type. Declaration public virtual List<T> GetRooms<T>() where T : FacilityRoom Returns Type Description System.Collections.Generic.List <T> List of all rooms. Type Parameters Name Description T The tyep of rooms. | Improve this Doc View Source TryGetRoom(RoomIdentifier, out FacilityRoom) Gets surface room from room identifier. Declaration public virtual bool TryGetRoom(RoomIdentifier roomIdentity, out FacilityRoom room) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentity The room identifier. FacilityRoom room The facility room. Returns Type Description System.Boolean Whether or not the room was found."
  },
  "api/PluginAPI.Core.Zones.Heavy.Generator.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.Generator.html",
    "title": "Class Generator | Nw Plugin API",
    "keywords": "Class Generator Represents an generator. Inheritance System.Object Generator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Heavy Assembly : PluginAPI.dll Syntax public class Generator Constructors | Improve this Doc View Source Generator(HczRoom, Scp079Generator) Initializes a new instance of the Generator class. Declaration public Generator(HczRoom room, Scp079Generator generator) Parameters Type Name Description HczRoom room The room the generator is in. MapGeneration.Distributors.Scp079Generator generator The base-game generator. Fields | Improve this Doc View Source OriginalObject The base-game object. Declaration public readonly Scp079Generator OriginalObject Field Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source Room The room the generator is in. Declaration public readonly HczRoom Room Field Value Type Description HczRoom Properties | Improve this Doc View Source GameObject Gets the generator's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsActivating Gets or sets whether or not the generator is activating. Declaration public bool IsActivating { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsActivationReady Gets whether or not the generator is activation-ready. Declaration public bool IsActivationReady { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEngaged Gets or sets whether or not the generator is engaged (active). Declaration public bool IsEngaged { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position Gets the generator's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets the generator rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Transform Gets the generator's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source PlayDeniedSound() Plays the generator's denied sound. Declaration public void PlayDeniedSound()"
  },
  "api/PluginAPI.Core.Zones.Heavy.GeneratorLogic.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.GeneratorLogic.html",
    "title": "Class GeneratorLogic | Nw Plugin API",
    "keywords": "Class GeneratorLogic Handles a generator's logic. Inheritance System.Object GeneratorLogic Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Heavy Assembly : PluginAPI.dll Syntax public class GeneratorLogic Constructors | Improve this Doc View Source GeneratorLogic(Generator) Initializes a new instance of the GeneratorLogic class. Declaration public GeneratorLogic(Generator generator) Parameters Type Name Description Generator generator The generator. Fields | Improve this Doc View Source Generator The generator. Declaration public readonly Generator Generator Field Value Type Description Generator Methods | Improve this Doc View Source OnDestroy() Declaration public virtual void OnDestroy() | Improve this Doc View Source OnLateUpdate() Declaration public virtual bool OnLateUpdate() Returns Type Description System.Boolean | Improve this Doc View Source OnPlayerInteraction(Player) Declaration public virtual bool OnPlayerInteraction(Player plr) Parameters Type Name Description Player plr Returns Type Description System.Boolean | Improve this Doc View Source OnUpdate() Declaration public virtual bool OnUpdate() Returns Type Description System.Boolean"
  },
  "api/PluginAPI.Core.Zones.Heavy.HczRoom.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.HczRoom.html",
    "title": "Class HczRoom | Nw Plugin API",
    "keywords": "Class HczRoom Inheritance System.Object FacilityRoom HczRoom HczScp049 Inherited Members FacilityRoom.Zone FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Heavy Assembly : PluginAPI.dll Syntax public class HczRoom : FacilityRoom Constructors | Improve this Doc View Source HczRoom(HeavyZone, RoomIdentifier) Initializes a new instance of the HczRoom class. Declaration public HczRoom(HeavyZone zone, RoomIdentifier room) Parameters Type Name Description HeavyZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Properties | Improve this Doc View Source Generator Declaration public Generator Generator { get; } Property Value Type Description Generator"
  },
  "api/PluginAPI.Core.Zones.Heavy.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.html",
    "title": "Namespace PluginAPI.Core.Zones.Heavy | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Heavy Classes Generator Represents an generator. GeneratorLogic Handles a generator's logic. HczRoom"
  },
  "api/PluginAPI.Core.Zones.Heavy.Rooms.HczScp049.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.Rooms.HczScp049.html",
    "title": "Class HczScp049 | Nw Plugin API",
    "keywords": "Class HczScp049 Represents SCP-049's room. Inheritance System.Object FacilityRoom HczRoom HczScp049 Inherited Members HczRoom.Generator FacilityRoom.Zone FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Heavy.Rooms Assembly : PluginAPI.dll Syntax public class HczScp049 : HczRoom Constructors | Improve this Doc View Source HczScp049(HeavyZone, RoomIdentifier) Initializes a new instance of the HczScp049 class. Declaration public HczScp049(HeavyZone zone, RoomIdentifier room) Parameters Type Name Description HeavyZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Properties | Improve this Doc View Source RoomIdentifier Gets the HczScp049 's MapGeneration.RoomIdentifier . Declaration public static RoomIdentifier RoomIdentifier { get; } Property Value Type Description MapGeneration.RoomIdentifier | Improve this Doc View Source RoomLights Gets the HczScp049 's lights. Declaration public static RoomLight RoomLights { get; } Property Value Type Description RoomLight"
  },
  "api/PluginAPI.Core.Zones.Heavy.Rooms.html": {
    "href": "api/PluginAPI.Core.Zones.Heavy.Rooms.html",
    "title": "Namespace PluginAPI.Core.Zones.Heavy.Rooms | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Heavy.Rooms Classes HczScp049 Represents SCP-049's room."
  },
  "api/PluginAPI.Core.Zones.HeavyZone.html": {
    "href": "api/PluginAPI.Core.Zones.HeavyZone.html",
    "title": "Class HeavyZone | Nw Plugin API",
    "keywords": "Class HeavyZone Represents the heavy containment zone. Inheritance System.Object FacilityZone HeavyZone Inherited Members FacilityZone.GetRooms() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class HeavyZone : FacilityZone Constructors | Improve this Doc View Source HeavyZone() Initializes a new instance of the HeavyZone class. Declaration public HeavyZone() Properties | Improve this Doc View Source Doors Gets all doors in heavy zone. Declaration public static List<FacilityDoor> Doors { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source Rooms Gets all rooms in heavy zone. Declaration public static List<HczRoom> Rooms { get; } Property Value Type Description System.Collections.Generic.List < HczRoom > | Improve this Doc View Source ZoneType Gets the zone type. Declaration public override FacilityZone ZoneType { get; } Property Value Type Description MapGeneration.FacilityZone Overrides FacilityZone.ZoneType Methods | Improve this Doc View Source GetRooms<T>() Gets all rooms of specific type. Declaration public override List<T> GetRooms<T>() where T : FacilityRoom Returns Type Description System.Collections.Generic.List <T> List of all rooms. Type Parameters Name Description T The tyep of rooms. Overrides FacilityZone.GetRooms<T>() | Improve this Doc View Source TryGetRoom(RoomIdentifier, out FacilityRoom) Gets surface room from room identifier. Declaration public override bool TryGetRoom(RoomIdentifier roomIdentity, out FacilityRoom room) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentity The room identifier. FacilityRoom room The facility room. Returns Type Description System.Boolean Whether or not the room was found. Overrides FacilityZone.TryGetRoom(RoomIdentifier, out FacilityRoom)"
  },
  "api/PluginAPI.Core.Zones.html": {
    "href": "api/PluginAPI.Core.Zones.html",
    "title": "Namespace PluginAPI.Core.Zones | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones Classes EntranceZone Represents the entrance zone. FacilityRoom Represents a room. FacilityZone Represents a zone. HeavyZone Represents the heavy containment zone. LightZone Represents the light containment zone. Surface Represents the surface. SurfaceZone Represents the surface zone. UnknownZone Represents a unknown zone in facility."
  },
  "api/PluginAPI.Core.Zones.Light.html": {
    "href": "api/PluginAPI.Core.Zones.Light.html",
    "title": "Namespace PluginAPI.Core.Zones.Light | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Light Classes LczRoom"
  },
  "api/PluginAPI.Core.Zones.Light.LczRoom.html": {
    "href": "api/PluginAPI.Core.Zones.Light.LczRoom.html",
    "title": "Class LczRoom | Nw Plugin API",
    "keywords": "Class LczRoom Inheritance System.Object FacilityRoom LczRoom LczScp914 Inherited Members FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Light Assembly : PluginAPI.dll Syntax public class LczRoom : FacilityRoom Constructors | Improve this Doc View Source LczRoom(LightZone, RoomIdentifier) Initializes a new instance of the LczRoom class. Declaration public LczRoom(LightZone zone, RoomIdentifier room) Parameters Type Name Description LightZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Fields | Improve this Doc View Source Zone The zone the room is in. Declaration public readonly LightZone Zone Field Value Type Description LightZone"
  },
  "api/PluginAPI.Core.Zones.Light.Rooms.html": {
    "href": "api/PluginAPI.Core.Zones.Light.Rooms.html",
    "title": "Namespace PluginAPI.Core.Zones.Light.Rooms | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Light.Rooms Classes LczScp914"
  },
  "api/PluginAPI.Core.Zones.Light.Rooms.LczScp914.html": {
    "href": "api/PluginAPI.Core.Zones.Light.Rooms.LczScp914.html",
    "title": "Class LczScp914 | Nw Plugin API",
    "keywords": "Class LczScp914 Inheritance System.Object FacilityRoom LczRoom LczScp914 Inherited Members LczRoom.Zone FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Light.Rooms Assembly : PluginAPI.dll Syntax public class LczScp914 : LczRoom Constructors | Improve this Doc View Source LczScp914(LightZone, RoomIdentifier) Constructor for SCP 914. Declaration public LczScp914(LightZone zone, RoomIdentifier room) Parameters Type Name Description LightZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Properties | Improve this Doc View Source IntakeChamber Gets the intake chamber UnityEngine.Transform . Declaration public static Transform IntakeChamber { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source OutputChamber Gets the output chamber UnityEngine.Transform . Declaration public static Transform OutputChamber { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source Start() Starts SCP-914 refining process. Declaration public static void Start()"
  },
  "api/PluginAPI.Core.Zones.LightZone.html": {
    "href": "api/PluginAPI.Core.Zones.LightZone.html",
    "title": "Class LightZone | Nw Plugin API",
    "keywords": "Class LightZone Represents the light containment zone. Inheritance System.Object FacilityZone LightZone Inherited Members FacilityZone.GetRooms() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class LightZone : FacilityZone Constructors | Improve this Doc View Source LightZone() Initializes a new instance of the LightZone class. Declaration public LightZone() Properties | Improve this Doc View Source Doors Gets all doors in surface zone. Declaration public static List<FacilityDoor> Doors { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source IsDecontaminated Checks whether or not the zone has already been decontaminated. Declaration public static bool IsDecontaminated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Rooms Gets all rooms in light zone. Declaration public static List<LczRoom> Rooms { get; } Property Value Type Description System.Collections.Generic.List < LczRoom > | Improve this Doc View Source ZoneType Gets the zone type. Declaration public override FacilityZone ZoneType { get; } Property Value Type Description MapGeneration.FacilityZone Overrides FacilityZone.ZoneType Methods | Improve this Doc View Source GetRooms<T>() Gets all rooms of specific type. Declaration public override List<T> GetRooms<T>() where T : FacilityRoom Returns Type Description System.Collections.Generic.List <T> List of all rooms. Type Parameters Name Description T The tyep of rooms. Overrides FacilityZone.GetRooms<T>() | Improve this Doc View Source StartDecontamination() Starts decontamination. Declaration public static void StartDecontamination() | Improve this Doc View Source TryGetRoom(RoomIdentifier, out FacilityRoom) Gets surface room from room identifier. Declaration public override bool TryGetRoom(RoomIdentifier roomIdentity, out FacilityRoom room) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentity The room identifier. FacilityRoom room The facility room. Returns Type Description System.Boolean Whether or not the room was found. Overrides FacilityZone.TryGetRoom(RoomIdentifier, out FacilityRoom)"
  },
  "api/PluginAPI.Core.Zones.Pocket.html": {
    "href": "api/PluginAPI.Core.Zones.Pocket.html",
    "title": "Namespace PluginAPI.Core.Zones.Pocket | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Core.Zones.Pocket Classes PocketDimension Represents the pocket dimension. PocketDimensionLogic Handles the Pocket Dimension's logic."
  },
  "api/PluginAPI.Core.Zones.Pocket.PocketDimension.html": {
    "href": "api/PluginAPI.Core.Zones.Pocket.PocketDimension.html",
    "title": "Class PocketDimension | Nw Plugin API",
    "keywords": "Class PocketDimension Represents the pocket dimension. Inheritance System.Object FacilityRoom PocketDimension Inherited Members FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Pocket Assembly : PluginAPI.dll Syntax public class PocketDimension : FacilityRoom Constructors | Improve this Doc View Source PocketDimension(UnknownZone, RoomIdentifier) Initializes a new instance of the PocketDimension class. Declaration public PocketDimension(UnknownZone zone, RoomIdentifier room) Parameters Type Name Description UnknownZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Fields | Improve this Doc View Source Zone The zone the pocket dimension is in. Declaration public readonly UnknownZone Zone Field Value Type Description UnknownZone Properties | Improve this Doc View Source IsAccessible Gets or sets whether or not the pocket dimension is accessible. Declaration public static bool IsAccessible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Logic Gets the pocket dimension's PocketDimensionLogic . Declaration public static PocketDimensionLogic Logic { get; set; } Property Value Type Description PocketDimensionLogic | Improve this Doc View Source Teleports Gets the pocket dimension teleports. Declaration public IEnumerable<PocketDimensionTeleport> Teleports { get; } Property Value Type Description System.Collections.Generic.IEnumerable < PocketDimensionTeleport > Methods | Improve this Doc View Source ShuffleTeleports() Shuffles the pocket dimension's teleports. Declaration public void ShuffleTeleports()"
  },
  "api/PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.html": {
    "href": "api/PluginAPI.Core.Zones.Pocket.PocketDimensionLogic.html",
    "title": "Class PocketDimensionLogic | Nw Plugin API",
    "keywords": "Class PocketDimensionLogic Handles the Pocket Dimension's logic. Inheritance System.Object PocketDimensionLogic Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones.Pocket Assembly : PluginAPI.dll Syntax public class PocketDimensionLogic Constructors | Improve this Doc View Source PocketDimensionLogic(PocketDimension) Initializes a new instance of the PocketDimensionLogic class. Declaration public PocketDimensionLogic(PocketDimension pd) Parameters Type Name Description PocketDimension pd The pocket dimension. Fields | Improve this Doc View Source PocketDimension The pocket dimension. Declaration public readonly PocketDimension PocketDimension Field Value Type Description PocketDimension Methods | Improve this Doc View Source OnDestroy() Declaration public virtual void OnDestroy() | Improve this Doc View Source OnPlayerEnteredPD(Player, Player) Declaration public virtual bool OnPlayerEnteredPD(Player plr, Player movedBy) Parameters Type Name Description Player plr Player movedBy Returns Type Description System.Boolean | Improve this Doc View Source OnPlayerEnteredPortal(Player, PocketDimensionTeleport.PDTeleportType) Declaration public virtual bool OnPlayerEnteredPortal(Player plr, PocketDimensionTeleport.PDTeleportType type) Parameters Type Name Description Player plr PocketDimensionTeleport.PDTeleportType type Returns Type Description System.Boolean"
  },
  "api/PluginAPI.Core.Zones.Surface.html": {
    "href": "api/PluginAPI.Core.Zones.Surface.html",
    "title": "Class Surface | Nw Plugin API",
    "keywords": "Class Surface Represents the surface. Inheritance System.Object FacilityRoom Surface Inherited Members FacilityRoom.Lights FacilityRoom.Identifier FacilityRoom.Transform FacilityRoom.GameObject FacilityRoom.Position FacilityRoom.Rotation FacilityRoom.GetComponent<T>(Boolean, Boolean) FacilityRoom.TryGetComponent<T>(T, Boolean, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class Surface : FacilityRoom Constructors | Improve this Doc View Source Surface(SurfaceZone, RoomIdentifier) Initializes a new instance of the Surface class. Declaration public Surface(SurfaceZone zone, RoomIdentifier room) Parameters Type Name Description SurfaceZone zone The zone type. MapGeneration.RoomIdentifier room The room identifier. Fields | Improve this Doc View Source Zone The zone the surface is in. Declaration public readonly SurfaceZone Zone Field Value Type Description SurfaceZone"
  },
  "api/PluginAPI.Core.Zones.SurfaceZone.html": {
    "href": "api/PluginAPI.Core.Zones.SurfaceZone.html",
    "title": "Class SurfaceZone | Nw Plugin API",
    "keywords": "Class SurfaceZone Represents the surface zone. Inheritance System.Object FacilityZone SurfaceZone Inherited Members FacilityZone.GetRooms() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class SurfaceZone : FacilityZone Constructors | Improve this Doc View Source SurfaceZone() Initializes a new instance of the SurfaceZone class. Declaration public SurfaceZone() Properties | Improve this Doc View Source Doors Gets all doors in surface zone. Declaration public static List<FacilityDoor> Doors { get; } Property Value Type Description System.Collections.Generic.List < FacilityDoor > | Improve this Doc View Source Rooms Gets all rooms in surface zone. Declaration public static List<Surface> Rooms { get; } Property Value Type Description System.Collections.Generic.List < Surface > | Improve this Doc View Source ZoneType Gets the zone type. Declaration public override FacilityZone ZoneType { get; } Property Value Type Description MapGeneration.FacilityZone Overrides FacilityZone.ZoneType Methods | Improve this Doc View Source GetRooms<T>() Gets all rooms of specific type. Declaration public override List<T> GetRooms<T>() where T : FacilityRoom Returns Type Description System.Collections.Generic.List <T> List of all rooms. Type Parameters Name Description T The tyep of rooms. Overrides FacilityZone.GetRooms<T>() | Improve this Doc View Source TryGetRoom(RoomIdentifier, out FacilityRoom) Gets surface room from room identifier. Declaration public override bool TryGetRoom(RoomIdentifier roomIdentity, out FacilityRoom room) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentity The room identifier. FacilityRoom room The facility room. Returns Type Description System.Boolean Whether or not the room was found. Overrides FacilityZone.TryGetRoom(RoomIdentifier, out FacilityRoom)"
  },
  "api/PluginAPI.Core.Zones.UnknownZone.html": {
    "href": "api/PluginAPI.Core.Zones.UnknownZone.html",
    "title": "Class UnknownZone | Nw Plugin API",
    "keywords": "Class UnknownZone Represents a unknown zone in facility. Inheritance System.Object FacilityZone UnknownZone Inherited Members FacilityZone.GetRooms() FacilityZone.GetRooms<T>() FacilityZone.TryGetRoom(RoomIdentifier, FacilityRoom) FacilityZone.ZoneType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Core.Zones Assembly : PluginAPI.dll Syntax public class UnknownZone : FacilityZone"
  },
  "api/PluginAPI.Enums.CommandType.html": {
    "href": "api/PluginAPI.Enums.CommandType.html",
    "title": "Enum CommandType | Nw Plugin API",
    "keywords": "Enum CommandType Represents command types. Namespace : PluginAPI.Enums Assembly : PluginAPI.dll Syntax [Flags] public enum CommandType : byte Fields Name Description Console GameConsole RemoteAdmin"
  },
  "api/PluginAPI.Enums.html": {
    "href": "api/PluginAPI.Enums.html",
    "title": "Namespace PluginAPI.Enums | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Enums Enums CommandType Represents command types. LoadPriority Represents load priorities for plugins. LogType Represents log types. ServerEventType Represents server event types."
  },
  "api/PluginAPI.Enums.LoadPriority.html": {
    "href": "api/PluginAPI.Enums.LoadPriority.html",
    "title": "Enum LoadPriority | Nw Plugin API",
    "keywords": "Enum LoadPriority Represents load priorities for plugins. Namespace : PluginAPI.Enums Assembly : PluginAPI.dll Syntax public enum LoadPriority : byte Fields Name Description High Highest Low Lowest Medium"
  },
  "api/PluginAPI.Enums.LogType.html": {
    "href": "api/PluginAPI.Enums.LogType.html",
    "title": "Enum LogType | Nw Plugin API",
    "keywords": "Enum LogType Represents log types. Namespace : PluginAPI.Enums Assembly : PluginAPI.dll Syntax public enum LogType : byte Fields Name Description Debug Error Info Raw Warning"
  },
  "api/PluginAPI.Enums.ServerEventType.html": {
    "href": "api/PluginAPI.Enums.ServerEventType.html",
    "title": "Enum ServerEventType | Nw Plugin API",
    "keywords": "Enum ServerEventType Represents server event types. Namespace : PluginAPI.Enums Assembly : PluginAPI.dll Syntax public enum ServerEventType Fields Name Description ConsoleCommand Event executed when using console command. GeneratorActivated Executed when generator activates. GrenadeExploded Executed when grenade explodes. ItemSpawned Executed when item is spawned while generation of map. LczDecontaminationAnnouncement Executed when information about decontamination is annoucement. LczDecontaminationStart Executed when decontamination in LCZ starts. MapGenerated Executed when map generates. PlaceBlood Executed when blood is placed. PlaceBulletHole Executed when bullet hole is placed. PlayerActivateGenerator Executed when player activated generator. PlayerAimWeapon Executed when player aims weapon PlayerBanned Executed when player gets banned. PlayerCancelUsingItem Executed when player cancels using item. PlayerChangeItem Executed when player changes current item. PlayerChangeRadioRange PlayerChangeRole Executed when player changes role. PlayerChangeSpectator Executed when player changes spectating player. PlayerCheaterReport Executed when player reports someone for cheating. PlayerCheckReservedSlot Event executed when joining to server for reserved slot verification. PlayerCloseGenerator Executed when player closes generator. PlayerDamage Executed when player damages someone. PlayerDamagedShootingTarget Executed when player damages shooting target. PlayerDamagedWindow Executed when player damages window. PlayerDeactivatedGenerator Executed when player deactivates generator. PlayerDeath Executed when player dies. PlayerDropAmmo Executed when player drops ammo. PlayerDropItem Executed when player drops item. PlayerDryfireWeapon Executed when player dryfires weapon. PlayerEscape Executed when player escapes. PlayerGameConsoleCommand Event executed when using game console command. PlayerHandcuff Executed when player handcuffs other player. PlayerInteractElevator Executed when player interacts with elevator. PlayerInteractLocker Executed when player interacts with locker. PlayerInteractScp330 Executed when player interacts with SCP330. PlayerInteractShootingTarget Executed when player interacts with shooting target. PlayerJoined Executed when player is verified. PlayerKicked Executed when player gets kicked from server. PlayerLeft Executed when player object is destroyed. PlayerMakeNoise Executed when player makes noise. PlayerMuted Event executed when player is muted. PlayerOpenGenerator Executed when player opens generator. PlayerPickupAmmo Executed when player pickups ammo. PlayerPickupArmor Executed when player pickups armor. PlayerPickupScp330 Executed when player pickups SCP330. PlayerPreauth Executed when player preauths. PlayerReceiveEffect Executed when player receives effect. PlayerReloadWeapon Executed when player reloads weapon. PlayerRemoteAdminCommand Event executed when using remoteadmin command. PlayerRemoveHandcuffs Executed when player removes handcuffs from other player. PlayerReport Executed when player reports someone for breaking server rules. PlayerSearchedPickup Executed when player searched pickup. PlayerSearchPickup Executed when player searches pickup. PlayerShotWeapon Executed when player shots weapon. PlayerSpawn Executed when player spawns. PlayerThrowItem Executed when player throws item. PlayerToggleFlashlight Executed when player toggles flashlight. PlayerUnloadWeapon Executed when player unloads weapon. PlayerUnlockGenerator Executed when player unlocks generator. PlayerUnmuted Event executed when player is unmuted. PlayerUsedItem Executed when player used item. PlayerUseHotkey Executed when player uses hotkey. PlayerUseItem Executed when player starts using item. RagdollSpawn Executed when ragdoll spawns. RoundEnd Executed when round ended. RoundRestart Executed when round restarts. RoundStart Executed when round starts. TeamRespawn Event executed when spawning next team. TeamRespawnSelected Event executed when selecting next team to spawn. WaitingForPlayers Executed when server waits for players. WarheadDetonation Event executed when warhead detonates. WarheadStart Event executed when warhead is started. WarheadStop Event executed when warhead is stopped."
  },
  "api/PluginAPI.Events.Event.html": {
    "href": "api/PluginAPI.Events.Event.html",
    "title": "Class Event | Nw Plugin API",
    "keywords": "Class Event Represents an event. Inheritance System.Object Event Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public class Event Constructors | Improve this Doc View Source Event(EventParameter[]) Initializes a new instance of the Event class. Declaration public Event(params EventParameter[] parameters) Parameters Type Name Description EventParameter [] parameters The parameters. Fields | Improve this Doc View Source Invokers Declaration public readonly Dictionary<Type, List<EventInvokeLocation>> Invokers Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.List < EventInvokeLocation >> | Improve this Doc View Source Parameters Declaration public readonly EventParameter[] Parameters Field Value Type Description EventParameter [] Methods | Improve this Doc View Source RegisterInvoker(Type, Object, MethodInfo) Registers a event handler. Declaration public void RegisterInvoker(Type plugin, object handle, MethodInfo method) Parameters Type Name Description System.Type plugin The plugin of the handler. System.Object handle The handle. System.Reflection.MethodInfo method The method."
  },
  "api/PluginAPI.Events.EventInvokeLocation.html": {
    "href": "api/PluginAPI.Events.EventInvokeLocation.html",
    "title": "Class EventInvokeLocation | Nw Plugin API",
    "keywords": "Class EventInvokeLocation Represents a event handlers location. Inheritance System.Object EventInvokeLocation Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public class EventInvokeLocation Fields | Improve this Doc View Source Method Declaration public MethodInfo Method Field Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source Plugin Declaration public Type Plugin Field Value Type Description System.Type | Improve this Doc View Source Target Declaration public object Target Field Value Type Description System.Object Methods | Improve this Doc View Source Invoke(List<Object>) Invokes the handler. Declaration public object Invoke(List<object> parameters) Parameters Type Name Description System.Collections.Generic.List < System.Object > parameters The parameters. Returns Type Description System.Object The return value."
  },
  "api/PluginAPI.Events.EventManager.html": {
    "href": "api/PluginAPI.Events.EventManager.html",
    "title": "Class EventManager | Nw Plugin API",
    "keywords": "Class EventManager Manages plugin events. Inheritance System.Object EventManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public static class EventManager Fields | Improve this Doc View Source Events Contains all events and their parameters. Declaration public static readonly Dictionary<ServerEventType, Event> Events Field Value Type Description System.Collections.Generic.Dictionary < ServerEventType , Event > Methods | Improve this Doc View Source ExecuteEvent(ServerEventType, Object[]) Executes event. Declaration public static bool ExecuteEvent(ServerEventType type, params object[] args) Parameters Type Name Description ServerEventType type The type of event System.Object [] args The arguments of event. Returns Type Description System.Boolean If false event is cancelled. | Improve this Doc View Source ExecuteEvent<T>(ServerEventType, Object[]) Executes event. Declaration public static T ExecuteEvent<T>(ServerEventType type, params object[] args) where T : struct Parameters Type Name Description ServerEventType type The type of event System.Object [] args The arguments of event. Returns Type Description T Event cancellation data. Type Parameters Name Description T | Improve this Doc View Source RegisterEvents(Object) Registers events in plugin. Declaration public static void RegisterEvents(object plugin) Parameters Type Name Description System.Object plugin The object of plugin. | Improve this Doc View Source RegisterEvents(Object, Object) Registers events in type of plugin. Declaration public static void RegisterEvents(object plugin, object eventHandler) Parameters Type Name Description System.Object plugin The object of plugin. System.Object eventHandler The event handler. | Improve this Doc View Source RegisterEvents<T>(Object) Registers events in type of plugin. Declaration public static void RegisterEvents<T>(object plugin) where T : class Parameters Type Name Description System.Object plugin The object of plugin. Type Parameters Name Description T"
  },
  "api/PluginAPI.Events.EventParameter.html": {
    "href": "api/PluginAPI.Events.EventParameter.html",
    "title": "Class EventParameter | Nw Plugin API",
    "keywords": "Class EventParameter Represents a event parameter. Inheritance System.Object EventParameter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public class EventParameter Constructors | Improve this Doc View Source EventParameter(Type, String) Initializes a new instance of the EventParameter class. Declaration public EventParameter(Type type, string defaultIdentifierName) Parameters Type Name Description System.Type type The BaseType . System.String defaultIdentifierName The DefaultIdentifierName . Properties | Improve this Doc View Source BaseType Gets the type of the parameter. Declaration public Type BaseType { get; } Property Value Type Description System.Type | Improve this Doc View Source DefaultIdentifierName Gets the default parameter name. Declaration public string DefaultIdentifierName { get; } Property Value Type Description System.String"
  },
  "api/PluginAPI.Events.html": {
    "href": "api/PluginAPI.Events.html",
    "title": "Namespace PluginAPI.Events | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Events Classes Event Represents an event. EventInvokeLocation Represents a event handlers location. EventManager Manages plugin events. EventParameter Represents a event parameter. Structs PlayerCheckReservedSlotCancellationData Represents reserved slot check event cancellation data. PreauthCancellationData Represents preauth event cancellation data. Interfaces IEventCancellation Defines a cancellable event param."
  },
  "api/PluginAPI.Events.IEventCancellation.html": {
    "href": "api/PluginAPI.Events.IEventCancellation.html",
    "title": "Interface IEventCancellation | Nw Plugin API",
    "keywords": "Interface IEventCancellation Defines a cancellable event param. Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public interface IEventCancellation Properties | Improve this Doc View Source IsCancelled Determines whether event is cancelled. Declaration bool IsCancelled { get; } Property Value Type Description System.Boolean"
  },
  "api/PluginAPI.Events.PlayerCheckReservedSlotCancellationData.html": {
    "href": "api/PluginAPI.Events.PlayerCheckReservedSlotCancellationData.html",
    "title": "Struct PlayerCheckReservedSlotCancellationData | Nw Plugin API",
    "keywords": "Struct PlayerCheckReservedSlotCancellationData Represents reserved slot check event cancellation data. Implements IEventCancellation Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public readonly struct PlayerCheckReservedSlotCancellationData : IEventCancellation Fields | Improve this Doc View Source HasReservedSlot Declaration public readonly bool HasReservedSlot Field Value Type Description System.Boolean Properties | Improve this Doc View Source IsCancelled Determines whether event is cancelled. Declaration public readonly bool IsCancelled { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source LeaveUnchanged() Doesn't override the reserved slot check. Declaration public static PlayerCheckReservedSlotCancellationData LeaveUnchanged() Returns Type Description PlayerCheckReservedSlotCancellationData The PlayerCheckReservedSlotCancellationData . | Improve this Doc View Source Override(Boolean) Overrides a reserved slot check. Declaration public static PlayerCheckReservedSlotCancellationData Override(bool hasReservedSlot) Parameters Type Name Description System.Boolean hasReservedSlot Indicating whether or not the player has a reserved slot. Returns Type Description PlayerCheckReservedSlotCancellationData The PlayerCheckReservedSlotCancellationData . Implements IEventCancellation"
  },
  "api/PluginAPI.Events.PreauthCancellationData.html": {
    "href": "api/PluginAPI.Events.PreauthCancellationData.html",
    "title": "Struct PreauthCancellationData | Nw Plugin API",
    "keywords": "Struct PreauthCancellationData Represents preauth event cancellation data. Implements IEventCancellation Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : PluginAPI.Events Assembly : PluginAPI.dll Syntax public readonly struct PreauthCancellationData : IEventCancellation Properties | Improve this Doc View Source IsCancelled Determines whether event is cancelled. Declaration public readonly bool IsCancelled { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Accept() Accepts the connection. Declaration public static PreauthCancellationData Accept() Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source GenerateWriter(out Boolean) Generates a network writer for the rejection packet. Declaration public readonly NetDataWriter GenerateWriter(out bool forced) Parameters Type Name Description System.Boolean forced Indicates whether or not the rejection is forced. Returns Type Description LiteNetLib.Utils.NetDataWriter The generated network writer. | Improve this Doc View Source HandledManually() Handles the connection manually. Declaration public static PreauthCancellationData HandledManually() Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source Reject(NetDataWriter, Boolean) Rejects a player who's trying to authenticate. Declaration public static PreauthCancellationData Reject(NetDataWriter writer, bool isForced) Parameters Type Name Description LiteNetLib.Utils.NetDataWriter writer The LiteNetLib.Utils.NetDataWriter instance. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully or not. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source Reject(RejectionReason, Boolean) Rejects a player who's trying to authenticate. Declaration public static PreauthCancellationData Reject(RejectionReason reason, bool isForced) Parameters Type Name Description RejectionReason reason Rejection reason. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source Reject(String, Boolean) Rejects a player who's trying to authenticate. Declaration public static PreauthCancellationData Reject(string customReason, bool isForced) Parameters Type Name Description System.String customReason The custom rejection reason. System.Boolean isForced Indicates whether the player has to be rejected forcefully or not. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source RejectBanned(String, DateTime, Boolean) Rejects a player who's trying to authenticate. Declaration public static PreauthCancellationData RejectBanned(string banReason, DateTime expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.DateTime expiration The ban expiration time. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source RejectBanned(String, Int64, Boolean) Rejects a player who's trying to authenticate. Declaration public static PreauthCancellationData RejectBanned(string banReason, long expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.Int64 expiration The ban expiration time in .NET Ticks. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source RejectDelay(Byte, Boolean) Delays the connection. Declaration public static PreauthCancellationData RejectDelay(byte seconds, bool isForced) Parameters Type Name Description System.Byte seconds The delay in seconds. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully. Returns Type Description PreauthCancellationData The PreauthCancellationData . | Improve this Doc View Source RejectRedirect(UInt16, Boolean) Rejects the player and redirects them to another server port. Declaration public static PreauthCancellationData RejectRedirect(ushort port, bool isForced) Parameters Type Name Description System.UInt16 port The new server port. System.Boolean isForced Indicates whether or not the player has to be rejected forcefully. Returns Type Description PreauthCancellationData The PreauthCancellationData . Implements IEventCancellation"
  },
  "api/PluginAPI.Helpers.html": {
    "href": "api/PluginAPI.Helpers.html",
    "title": "Namespace PluginAPI.Helpers | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Helpers Classes Paths Contains all important folder paths."
  },
  "api/PluginAPI.Helpers.Paths.html": {
    "href": "api/PluginAPI.Helpers.Paths.html",
    "title": "Class Paths | Nw Plugin API",
    "keywords": "Class Paths Contains all important folder paths. Inheritance System.Object Paths Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Helpers Assembly : PluginAPI.dll Syntax public static class Paths Properties | Improve this Doc View Source AppData Gets the path to the system's AppData folder. Declaration public static string AppData { get; } Property Value Type Description System.String | Improve this Doc View Source Configs Gets the path to the server's config settings. Declaration public static string Configs { get; } Property Value Type Description System.String | Improve this Doc View Source Dependencies Gets the path to the \"Dependencies\" folder, located inside the \"Plugins\" folder. Declaration public static string Dependencies { get; } Property Value Type Description System.String | Improve this Doc View Source Global Gets the path to global config folder. Declaration public static string Global { get; } Property Value Type Description System.String | Improve this Doc View Source GlobalPlugins Gets the paths to global plugins and dependencies. Declaration public static PluginDirectory GlobalPlugins { get; } Property Value Type Description PluginDirectory | Improve this Doc View Source LocalPlugins Gets the paths to this server port's plugins and dependencies. Declaration public static PluginDirectory LocalPlugins { get; } Property Value Type Description PluginDirectory | Improve this Doc View Source PluginAPI Gets the path to the \"Plugin API\" folder, located inside the \"SCP Secret laboratory Dedicated Server\" folder. Declaration public static string PluginAPI { get; } Property Value Type Description System.String | Improve this Doc View Source Plugins Gets the path to the \"Plugins\" folder, located inside the \"Plugin API\" folder. Declaration public static string Plugins { get; } Property Value Type Description System.String | Improve this Doc View Source SecretLab Gets the path to the \"Secret Laboratory\" folder, located inside AppData. Declaration public static string SecretLab { get; } Property Value Type Description System.String"
  },
  "api/PluginAPI.Loader.AssemblyLoader.html": {
    "href": "api/PluginAPI.Loader.AssemblyLoader.html",
    "title": "Class AssemblyLoader | Nw Plugin API",
    "keywords": "Class AssemblyLoader Manages initialization of plugin system and loading of plugins. Inheritance System.Object AssemblyLoader Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : PluginAPI.Loader Assembly : PluginAPI.dll Syntax public static class AssemblyLoader Properties | Improve this Doc View Source Dependencies Gets a list of all recognized and loaded dependencies. Declaration public static List<Assembly> Dependencies { get; } Property Value Type Description System.Collections.Generic.List < System.Reflection.Assembly > | Improve this Doc View Source InstalledPlugins Gets a list of all installed and enabled plugins. Declaration public static IEnumerable<PluginHandler> InstalledPlugins { get; } Property Value Type Description System.Collections.Generic.IEnumerable < PluginHandler > | Improve this Doc View Source IsLoaded Whether the loader has been run already. This exists to prevent the loader from being ran multiple times in one session. Declaration public static bool IsLoaded { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Plugins Gets a list of all recognized and loaded plugins. Declaration public static Dictionary<Assembly, Dictionary<Type, PluginHandler>> Plugins { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Reflection.Assembly , System.Collections.Generic.Dictionary < System.Type , PluginHandler >> Methods | Improve this Doc View Source Initialize() Ran on server startup, loads plugins and dependencies and all main features from the API. Declaration public static void Initialize()"
  },
  "api/PluginAPI.Loader.Features.html": {
    "href": "api/PluginAPI.Loader.Features.html",
    "title": "Namespace PluginAPI.Loader.Features | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Loader.Features Structs PluginDirectory Contains the paths containing plugins and dependencies."
  },
  "api/PluginAPI.Loader.Features.PluginDirectory.html": {
    "href": "api/PluginAPI.Loader.Features.PluginDirectory.html",
    "title": "Struct PluginDirectory | Nw Plugin API",
    "keywords": "Struct PluginDirectory Contains the paths containing plugins and dependencies. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : PluginAPI.Loader.Features Assembly : PluginAPI.dll Syntax public struct PluginDirectory Constructors | Improve this Doc View Source PluginDirectory(String) Initializes a new instance of the PluginDirectory struct. Declaration public PluginDirectory(string containingFolder) Parameters Type Name Description System.String containingFolder The folder on which the \"plugins\" folder is stored. Properties | Improve this Doc View Source Dependencies Gets or sets the dependencies folder. Declaration public string Dependencies { get; set; } Property Value Type Description System.String | Improve this Doc View Source Plugins Gets or sets the plugins folder. Declaration public string Plugins { get; set; } Property Value Type Description System.String"
  },
  "api/PluginAPI.Loader.html": {
    "href": "api/PluginAPI.Loader.html",
    "title": "Namespace PluginAPI.Loader | Nw Plugin API",
    "keywords": "Namespace PluginAPI.Loader Classes AssemblyLoader Manages initialization of plugin system and loading of plugins."
  },
  "articles/gettingstarted/codeprerequisites.html": {
    "href": "articles/gettingstarted/codeprerequisites.html",
    "title": "Plugin prerequisites | Nw Plugin API",
    "keywords": "Plugin prerequisites The Plugin Class WARNING: Your plugin MUST have a Plugin class. The Plugin class is the main class of your plugin. It contains the entry point of your plugin and is used to initialize your plugin. It is typically named either Plugin , MainClass , or the name of your plugin. The Plugin class must have a method with the PluginEntryPoint attribute. 4 parameters must be passed on to PluginEntryPoint attribute, in the following order: Plugin Name, Plugin Version, Plugin Author, and Plugin Description. If you are planning to use any kind of events, you would call EventManager::RegisterEvents in the PluginEntryPoint method, more on that in the EventHandlers section. Here is also where a 'Singleton' would be initialized. ### The Config Class #### NOTE: The Config class isn't required, but is recommended since you will need to if you're planning on letting serverhosts make any changes to your plugin. Most developers will urge you to include as many config values as possible as this is considered good practice. The Config class contains properties, which values will be serialized and deserialized into/from a YML file when the plugin loads. Properties are similar to fields, except they have a getter and a setter. public string Text { get; set; } is an example property. Properties can be of any supported type, but they must be public. You can prevent properties from being serialized using the [YamlIgnore] attribute, this, however, will require the YamlDotNet package to be installed. Non-public properties and anything else that isn't a property will be ignored. You need to define your Config class in the Plugin class using the PluginConfig attribute, by adding it to a field with your Config class as type. This typicially looks like this: csharp [PluginConfig] public Config Config; You can access any values inside the config via its instance defined the the Plugin class. If you need to read values outside the Plugin class, consider making your Plugin a Singleton . ### Event Handlers An event handler is a method that are called when a specific event is triggered. An event handler is marked with the PluginEvent(EventType) attribute. Any class containing an event handler must be registered using EventManager.RegisterEvents<CLASSNAME>(this); in the PluginEntryPoint method. If the event handler is in the Plugin class, you can simply call EventManager.RegisterEvents(this); . Here is an example of an event handler which displays a welcome message: csharp [PluginEvent(ServerEventType.PlayerJoined)] public void OnPlayerJoin(Player player) { player.SendBroadcast(\"Welcome to the server!\", 5); }"
  },
  "articles/gettingstarted/gettingstarted.html": {
    "href": "articles/gettingstarted/gettingstarted.html",
    "title": "Making your first plugin | Nw Plugin API",
    "keywords": "Making your first plugin Environment setup: IDE (Beginner-friendly) Visual studio Jetbrains rider ### CLI (For people who can't run an IDE) Writing the code Before we begin writing our code, we must make sure that we understand the plugin prerequisites so we can avoid and unnecessary errors. TODO: Write the code"
  },
  "articles/gettingstarted/gettingstarted-cli.html": {
    "href": "articles/gettingstarted/gettingstarted-cli.html",
    "title": "Setting up your environment | Nw Plugin API",
    "keywords": "Setting up your environment Prerequisites .NET CLI .NET Framework 4.8 Any text editor Visual Studio Code is the most popular choice ## Creating the project Open your terminal of choice at the location you want to create your project at Run dotnet new console -n MyName Open the MyName.csproj file inside the MyName folder and change TargetFramework to net4.8 Adding References Run dotnet add package Northwood.PluginApi -prerelease"
  },
  "articles/gettingstarted/gettingstarted-ide.html": {
    "href": "articles/gettingstarted/gettingstarted-ide.html",
    "title": "Setting up your environment | Nw Plugin API",
    "keywords": "Setting up your environment Prerequisites .NET Framework 4.8 An IDE Visual Studio is a popular choice that is free Make sure to select the .NET desktop development workload Jetbrains Rider is the premium option that is free for students. Creating the project Visual Studio walkthrough Open Visual Studio Click Create a new project View Image Select C# and Class Library (.NET Framework) View Image Click Next and select .NET Framework 4.8 from the dropdown, optionally give your plugin a name View Image Click Create Rider walkthrough Open Rider Click New Solution View Image Under .NET Framework select Class Library and make sure framework is set to v4.8 , optionally specify a solution name View Image Click Create Adding References Visual Studio Right click on your project in the solution explorer and select Manage NuGet Packages for Solution You might need to sign into your Microsoft account on the top right to do this. View Image Select the Browse tab and search Northwood.PluginApi . You currently need to check the Include prerelease checkbox to find the latest version View Image Select it from the list, click on the checkmark next to your project, and click Install View Image Press OK or I Accept if any prompt(s) shows up. Rider Right click on your project in the solution explorer and select Manage NuGet Packages View Image Select the Browse tab and search Northwood.PluginApi . You currently need to check the Include prerelease checkbox to find the latest version View Image Press the green checkmark"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "NwAPI Introduction | Nw Plugin API",
    "keywords": "NwAPI Introduction TODO: IMPROVE INTRO The Northwood plugin API (NWAPI) is a first-party, event based API used to create server-side plugins for SCP:SL in C#. Code Prerequisites ### The Plugin class ### The Config class ### Event handlers Getting Started ### Environment setup ### Writing code"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Nw Plugin API",
    "keywords": "W.I.P"
  }
}