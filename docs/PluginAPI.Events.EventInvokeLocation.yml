### YamlMime:ManagedReference
items:
- uid: PluginAPI.Events.EventInvokeLocation
  commentId: T:PluginAPI.Events.EventInvokeLocation
  id: EventInvokeLocation
  parent: PluginAPI.Events
  children:
  - PluginAPI.Events.EventInvokeLocation.Invoke(System.Object[])
  - PluginAPI.Events.EventInvokeLocation.Method
  - PluginAPI.Events.EventInvokeLocation.Plugin
  - PluginAPI.Events.EventInvokeLocation.Target
  langs:
  - csharp
  - vb
  name: EventInvokeLocation
  nameWithType: EventInvokeLocation
  fullName: PluginAPI.Events.EventInvokeLocation
  type: Class
  source:
    remote:
      path: NwPluginAPI/Events/EventInvokeLocation.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: EventInvokeLocation
    path: ../NwPluginAPI/Events/EventInvokeLocation.cs
    startLine: 9
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  summary: "\nRepresents a event handlers location.\n"
  example: []
  syntax:
    content: public class EventInvokeLocation
    content.vb: Public Class EventInvokeLocation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Events.EventInvokeLocation.Plugin
  commentId: F:PluginAPI.Events.EventInvokeLocation.Plugin
  id: Plugin
  parent: PluginAPI.Events.EventInvokeLocation
  langs:
  - csharp
  - vb
  name: Plugin
  nameWithType: EventInvokeLocation.Plugin
  fullName: PluginAPI.Events.EventInvokeLocation.Plugin
  type: Field
  source:
    remote:
      path: NwPluginAPI/Events/EventInvokeLocation.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Plugin
    path: ../NwPluginAPI/Events/EventInvokeLocation.cs
    startLine: 11
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public Type Plugin
    return:
      type: System.Type
    content.vb: Public Plugin As Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.EventInvokeLocation.Target
  commentId: F:PluginAPI.Events.EventInvokeLocation.Target
  id: Target
  parent: PluginAPI.Events.EventInvokeLocation
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: EventInvokeLocation.Target
  fullName: PluginAPI.Events.EventInvokeLocation.Target
  type: Field
  source:
    remote:
      path: NwPluginAPI/Events/EventInvokeLocation.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Target
    path: ../NwPluginAPI/Events/EventInvokeLocation.cs
    startLine: 12
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public object Target
    return:
      type: System.Object
    content.vb: Public Target As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.EventInvokeLocation.Method
  commentId: F:PluginAPI.Events.EventInvokeLocation.Method
  id: Method
  parent: PluginAPI.Events.EventInvokeLocation
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: EventInvokeLocation.Method
  fullName: PluginAPI.Events.EventInvokeLocation.Method
  type: Field
  source:
    remote:
      path: NwPluginAPI/Events/EventInvokeLocation.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Method
    path: ../NwPluginAPI/Events/EventInvokeLocation.cs
    startLine: 13
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public MethodInfo Method
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Method As MethodInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.EventInvokeLocation.Invoke(System.Object[])
  commentId: M:PluginAPI.Events.EventInvokeLocation.Invoke(System.Object[])
  id: Invoke(System.Object[])
  parent: PluginAPI.Events.EventInvokeLocation
  langs:
  - csharp
  - vb
  name: Invoke(Object[])
  nameWithType: EventInvokeLocation.Invoke(Object[])
  fullName: PluginAPI.Events.EventInvokeLocation.Invoke(System.Object[])
  type: Method
  source:
    remote:
      path: NwPluginAPI/Events/EventInvokeLocation.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Invoke
    path: ../NwPluginAPI/Events/EventInvokeLocation.cs
    startLine: 20
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  summary: "\nInvokes the handler.\n"
  example: []
  syntax:
    content: public object Invoke(object[] parameters)
    parameters:
    - id: parameters
      type: System.Object[]
      description: The parameters.
    return:
      type: System.Object
      description: The return value.
    content.vb: Public Function Invoke(parameters As Object()) As Object
  overload: PluginAPI.Events.EventInvokeLocation.Invoke*
  nameWithType.vb: EventInvokeLocation.Invoke(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PluginAPI.Events.EventInvokeLocation.Invoke(System.Object())
  name.vb: Invoke(Object())
references:
- uid: PluginAPI.Events
  commentId: N:PluginAPI.Events
  name: PluginAPI.Events
  nameWithType: PluginAPI.Events
  fullName: PluginAPI.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: PluginAPI.Events.EventInvokeLocation.Invoke*
  commentId: Overload:PluginAPI.Events.EventInvokeLocation.Invoke
  name: Invoke
  nameWithType: EventInvokeLocation.Invoke
  fullName: PluginAPI.Events.EventInvokeLocation.Invoke
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
