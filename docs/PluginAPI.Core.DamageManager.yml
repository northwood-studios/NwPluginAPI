### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.DamageManager
  commentId: T:PluginAPI.Core.DamageManager
  id: DamageManager
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.DamageManager.#ctor(PluginAPI.Core.Player)
  - PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
  - PluginAPI.Core.DamageManager.DamageBlacklist
  - PluginAPI.Core.DamageManager.DamageWhitelist
  langs:
  - csharp
  - vb
  name: DamageManager
  nameWithType: DamageManager
  fullName: PluginAPI.Core.DamageManager
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/DamageManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: DamageManager
    path: ../NwPluginAPI/Core/DamageManager.cs
    startLine: 10
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nManages damage for a player.\n"
  example: []
  syntax:
    content: public class DamageManager
    content.vb: Public Class DamageManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
  commentId: P:PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
  id: CanReceiveDamageFromPlayers
  parent: PluginAPI.Core.DamageManager
  langs:
  - csharp
  - vb
  name: CanReceiveDamageFromPlayers
  nameWithType: DamageManager.CanReceiveDamageFromPlayers
  fullName: PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/DamageManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: CanReceiveDamageFromPlayers
    path: ../NwPluginAPI/Core/DamageManager.cs
    startLine: 17
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets whether or not player can receive damage from other players.\n"
  example: []
  syntax:
    content: public bool CanReceiveDamageFromPlayers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanReceiveDamageFromPlayers As Boolean
  overload: PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PluginAPI.Core.DamageManager.DamageBlacklist
  commentId: P:PluginAPI.Core.DamageManager.DamageBlacklist
  id: DamageBlacklist
  parent: PluginAPI.Core.DamageManager
  langs:
  - csharp
  - vb
  name: DamageBlacklist
  nameWithType: DamageManager.DamageBlacklist
  fullName: PluginAPI.Core.DamageManager.DamageBlacklist
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/DamageManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: DamageBlacklist
    path: ../NwPluginAPI/Core/DamageManager.cs
    startLine: 26
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets a list of players who can&apos;t damage this player.\n"
  example: []
  syntax:
    content: public List<Player> DamageBlacklist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PluginAPI.Core.Player}
    content.vb: Public ReadOnly Property DamageBlacklist As List(Of Player)
  overload: PluginAPI.Core.DamageManager.DamageBlacklist*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.DamageManager.DamageWhitelist
  commentId: P:PluginAPI.Core.DamageManager.DamageWhitelist
  id: DamageWhitelist
  parent: PluginAPI.Core.DamageManager
  langs:
  - csharp
  - vb
  name: DamageWhitelist
  nameWithType: DamageManager.DamageWhitelist
  fullName: PluginAPI.Core.DamageManager.DamageWhitelist
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/DamageManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: DamageWhitelist
    path: ../NwPluginAPI/Core/DamageManager.cs
    startLine: 31
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets a list of players who can to damage this player.\n"
  example: []
  syntax:
    content: public List<Player> DamageWhitelist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PluginAPI.Core.Player}
    content.vb: Public ReadOnly Property DamageWhitelist As List(Of Player)
  overload: PluginAPI.Core.DamageManager.DamageWhitelist*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.DamageManager.#ctor(PluginAPI.Core.Player)
  commentId: M:PluginAPI.Core.DamageManager.#ctor(PluginAPI.Core.Player)
  id: '#ctor(PluginAPI.Core.Player)'
  parent: PluginAPI.Core.DamageManager
  langs:
  - csharp
  - vb
  name: DamageManager(Player)
  nameWithType: DamageManager.DamageManager(Player)
  fullName: PluginAPI.Core.DamageManager.DamageManager(PluginAPI.Core.Player)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Core/DamageManager.cs
      branch: master
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Core/DamageManager.cs
    startLine: 37
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nInitializes a new instance of the <xref href=\"PluginAPI.Core.DamageManager\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DamageManager(Player plr)
    parameters:
    - id: plr
      type: PluginAPI.Core.Player
      description: The player.
    content.vb: Public Sub New(plr As Player)
  overload: PluginAPI.Core.DamageManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers*
  commentId: Overload:PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
  name: CanReceiveDamageFromPlayers
  nameWithType: DamageManager.CanReceiveDamageFromPlayers
  fullName: PluginAPI.Core.DamageManager.CanReceiveDamageFromPlayers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PluginAPI.Core.DamageManager.DamageBlacklist*
  commentId: Overload:PluginAPI.Core.DamageManager.DamageBlacklist
  name: DamageBlacklist
  nameWithType: DamageManager.DamageBlacklist
  fullName: PluginAPI.Core.DamageManager.DamageBlacklist
- uid: System.Collections.Generic.List{PluginAPI.Core.Player}
  commentId: T:System.Collections.Generic.List{PluginAPI.Core.Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Player>
  nameWithType: List<Player>
  fullName: System.Collections.Generic.List<PluginAPI.Core.Player>
  nameWithType.vb: List(Of Player)
  fullName.vb: System.Collections.Generic.List(Of PluginAPI.Core.Player)
  name.vb: List(Of Player)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PluginAPI.Core.DamageManager.DamageWhitelist*
  commentId: Overload:PluginAPI.Core.DamageManager.DamageWhitelist
  name: DamageWhitelist
  nameWithType: DamageManager.DamageWhitelist
  fullName: PluginAPI.Core.DamageManager.DamageWhitelist
- uid: PluginAPI.Core.DamageManager
  commentId: T:PluginAPI.Core.DamageManager
  parent: PluginAPI.Core
  name: DamageManager
  nameWithType: DamageManager
  fullName: PluginAPI.Core.DamageManager
- uid: PluginAPI.Core.DamageManager.#ctor*
  commentId: Overload:PluginAPI.Core.DamageManager.#ctor
  name: DamageManager
  nameWithType: DamageManager.DamageManager
  fullName: PluginAPI.Core.DamageManager.DamageManager
- uid: PluginAPI.Core.Player
  commentId: T:PluginAPI.Core.Player
  parent: PluginAPI.Core
  name: Player
  nameWithType: Player
  fullName: PluginAPI.Core.Player
